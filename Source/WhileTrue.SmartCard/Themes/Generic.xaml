

<ResourceDictionary
    xmlns='http://schemas.microsoft.com/winfx/2006/xaml/presentation'
    xmlns:x='http://schemas.microsoft.com/winfx/2006/xaml' 
    xmlns:wt='http://schemas.whiletrue.eu/xaml'
	xmlns:Controls='clr-namespace:WhileTrue.Controls'
	xmlns:ATRView='clr-namespace:WhileTrue.Controls.ATRView'
    xmlns:ATR="clr-namespace:WhileTrue.Classes.ATR"
	mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
>
		


<!-- 
From: ..\Controls\ATRViewer\Templates.xaml
-->


    <ResourceDictionary.MergedDictionaries >
        <ResourceDictionary Source="/WhileTrue.Core;component/Resources/Drawings.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Controls:ATRViewer}" >
        <Style.Resources>
            <Style TargetType="{x:Type TextBlock}" x:Key="TextBoxAligned" >
                <Setter Property="BaselineOffset" Value="16" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="RadioButtonTextBoxAligned" >
                <Setter Property="BaselineOffset" Value="19" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="TextBoxAlignedSubScript" >
                <Setter Property="Margin" Value="-3" />
                <Setter Property="BaselineOffset" Value="7" />
                <Setter Property="FontSize" Value="8" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="SubScript" >
                <Setter Property="Margin" Value="-3" />
                <Setter Property="BaselineOffset" Value="4" />
                <Setter Property="FontSize" Value="8" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="SuperScript" >
                <Setter Property="Margin" Value="-3" />
                <Setter Property="BaselineOffset" Value="11" />
                <Setter Property="FontSize" Value="8" />
            </Style>
            <wt:ObjectLookupConverter x:Key="ZeroToVisibilityConverter"  >
                <wt:ObjectLookupItem Key="0" Value="{x:Static Visibility.Collapsed}" />
                <wt:ObjectLookupOtherwiseItem Value="{x:Static Visibility.Visible}" />
            </wt:ObjectLookupConverter>
            <wt:ObjectLookupConverter x:Key="ZeroToNonVisibilityConverter"  >
                <wt:ObjectLookupItem Key="0" Value="{x:Static Visibility.Visible}" />
                <wt:ObjectLookupOtherwiseItem Value="{x:Static Visibility.Collapsed}" />
            </wt:ObjectLookupConverter>
            <wt:ObjectLookupConverter x:Key="NullToVisibilityConverter"  >
                <wt:ObjectLookupItem Key="{x:Null}" Value="{x:Static Visibility.Collapsed}" />
                <wt:ObjectLookupOtherwiseItem Value="{x:Static Visibility.Visible}" />
            </wt:ObjectLookupConverter>
            <wt:ObjectLookupConverter x:Key="NullToNonVisibilityConverter"  >
                <wt:ObjectLookupItem Key="{x:Null}" Value="{x:Static Visibility.Visible}" />
                <wt:ObjectLookupOtherwiseItem Value="{x:Static Visibility.Collapsed}" />
            </wt:ObjectLookupConverter>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"  />
            <wt:ObjectLookupConverter x:Key="BooleanToNonVisibilityConverter"  >
                <wt:ObjectLookupItem Key="True" Value="{x:Static Visibility.Collapsed}" />
                <wt:ObjectLookupItem Key="False" Value="{x:Static Visibility.Visible}" />
            </wt:ObjectLookupConverter>
            <wt:ObjectLookupConverter x:Key="NullToContentAvailableConverter"  >
                <wt:ObjectLookupItem Key="{x:Null}" Value="{x:Static wt:ContentAvailability.Available}" />
                <wt:ObjectLookupOtherwiseItem Value="{x:Static wt:ContentAvailability.Unavailable}" />
            </wt:ObjectLookupConverter>
            <wt:ObjectLookupConverter x:Key="BooleanToTextConverter"  >
                <wt:ObjectLookupItem Key="True" Value="yes" />
                <wt:ObjectLookupItem Key="False" Value="no" />
            </wt:ObjectLookupConverter>
            <Style TargetType="{x:Type TextBox}" x:Key="NotSetWhenEmpty" >
                <Style.Triggers>
                    <Trigger Property="Text" Value="">
                        <Setter Property="Background">
                            <Setter.Value>
                                <VisualBrush Stretch="None" AlignmentX="Left" Viewbox="-.05,0,1,1" ViewboxUnits="RelativeToBoundingBox">
                                    <VisualBrush.Visual>
                                        <TextBlock Text="not set" Margin="-2,-1" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="{x:Null}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <wt:ContentAvailabilityConverter x:Key="ContentAvailabilityConverter"   />
            <wt:NegateBoolConverter x:Key="NegateBoolConverter"   />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ATRViewer}">
                    <ControlTemplate.Resources>
                        <ItemsPanelTemplate x:Key="HorizontalStackPanel" >
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}" x:Key="SectionBoxTitleLeft" >
                            <Border Margin="5" Visibility="{TemplateBinding Visibility}" BorderThickness="1" BorderBrush="Gray" CornerRadius="3">
                                <DockPanel>
                                    <TextBlock Background="Gray" DockPanel.Dock="Left">
                                        <ContentControl Content="{TemplateBinding Header}" HorizontalAlignment="Right" Margin="0,8,2,8" TextBlock.Foreground="White">
                                            <ContentControl.LayoutTransform>
                                                <RotateTransform Angle="270" />
                                            </ContentControl.LayoutTransform>
                                        </ContentControl>
                                    </TextBlock>
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}" x:Key="SectionBoxInnerTitle" >
                            <DockPanel>
                                <ContentPresenter DockPanel.Dock="Top" Content="{TemplateBinding Header}" />
                                <Border DockPanel.Dock="Top" BorderThickness="0,0,0,1" BorderBrush="Gray" />
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </DockPanel>
                        </ControlTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrChecksumTokenAdapter}">
                            <HeaderedContentControl Header="Checksum (TCK)" Visibility="{Binding ChecksumExists, Converter={StaticResource BooleanToVisibilityConverter}}" Template="{StaticResource SectionBoxTitleLeft}">
                                <HeaderedContentControl Template="{StaticResource SectionBoxInnerTitle}">
                                    <HeaderedContentControl.Header>
                                        <TextBlock Text="{Binding Bytes}" Margin="4" FontWeight="Bold" />
                                    </HeaderedContentControl.Header>
                                    <TextBlock Margin="4">
                                        <TextBlock Text="Checksum is" /><LineBreak />
                                        <TextBlock Text="{Binding ChecksumValid}" />
                                    </TextBlock>
                                </HeaderedContentControl>
                            </HeaderedContentControl>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrHistoricalCharactersTokenAdapter}">
                            <HeaderedContentControl Header="Historical Characters" Template="{StaticResource SectionBoxTitleLeft}">
                                <HeaderedContentControl Template="{StaticResource SectionBoxInnerTitle}">
                                    <HeaderedContentControl.Header>
                                        <DockPanel DockPanel.Dock="Top" Margin="4">
                                            <Image DockPanel.Dock="Right" VerticalAlignment="Top" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Set value" Controls:AtrEditorHelper.AttachSetValueCommand="HistoricalBytesEdit" />
                                                        <MenuItem Header="Clear value" Command="{Binding ClearHistoricalCharactersCommand}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <wt:ValidationResultBanner DockPanel.Dock="Bottom" ValidationResults="{Binding (Validation.Errors), ElementName=HistoricalBytesEdit}"  />
                                            <TextBox x:Name="HistoricalBytesEdit" Text="{wt:ValidatingBinding Characters,UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" Padding="0" BorderThickness="0" MinWidth="10"  />
                                        </DockPanel>
                                    </HeaderedContentControl.Header>
                                    <TextBlock HorizontalAlignment="Stretch" Margin="4"></TextBlock>
                                </HeaderedContentControl>
                            </HeaderedContentControl>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrExtraBytesAdapter}">
                            <HeaderedContentControl Header="Extra bytes (Invalid Coding)" Visibility="{Binding ExtraBytesAvailable, Converter={StaticResource BooleanToVisibilityConverter}}" Template="{StaticResource SectionBoxTitleLeft}">
                                <HeaderedContentControl Template="{StaticResource SectionBoxInnerTitle}">
                                    <HeaderedContentControl.Header>
                                        <TextBlock Text="{Binding Bytes}" Margin="4" FontWeight="Bold" />
                                    </HeaderedContentControl.Header>
                                    <TextBlock HorizontalAlignment="Stretch" Margin="4"></TextBlock>
                                </HeaderedContentControl>
                            </HeaderedContentControl>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrInterfaceByteGroupTokenAdapter}">
                            <HeaderedContentControl Template="{StaticResource SectionBoxTitleLeft}">
                                <HeaderedContentControl.Header>
                                    <TextBlock>Interface Bytes (<TextBlock Text="{Binding Type}" />)</TextBlock>
                                </HeaderedContentControl.Header>
                                <HeaderedContentControl Template="{StaticResource SectionBoxInnerTitle}">
                                    <HeaderedContentControl.Header>
                                        <TextBlock Text="{Binding Bytes}" Margin="4" FontWeight="Bold" />
                                    </HeaderedContentControl.Header>
                                    <StackPanel Orientation="Vertical" Margin="4">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Width="28">
                                                <TextBlock Text="TA" Style="{StaticResource TextBoxAligned}" />
                                                <TextBlock Text="{Binding GroupNumber}" Style="{StaticResource TextBoxAlignedSubScript}" />
                                                <TextBlock Text=": " Style="{StaticResource TextBoxAligned}" />
                                            </TextBlock>
                                            <TextBox x:Name="TaEdit" Text="{Binding Ta,UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Width="50" Padding="0" Style="{StaticResource NotSetWhenEmpty}"  />
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Set value" Controls:AtrEditorHelper.AttachSetValueCommand="TaEdit" />
                                                        <MenuItem Header="Clear value" Command="{Binding ClearTaCommand}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Width="28">
                                                <TextBlock Text="TB" Style="{StaticResource TextBoxAligned}" />
                                                <TextBlock Text="{Binding GroupNumber}" Style="{StaticResource TextBoxAlignedSubScript}" />
                                                <TextBlock Text=": " Style="{StaticResource TextBoxAligned}" />
                                            </TextBlock>
                                            <TextBox x:Name="TbEdit" Text="{Binding Tb,UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Width="50" Padding="0" Style="{StaticResource NotSetWhenEmpty}"  />
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Set value" Controls:AtrEditorHelper.AttachSetValueCommand="TbEdit" />
                                                        <MenuItem Header="Clear value" Command="{Binding ClearTbCommand}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Width="28">
                                                <TextBlock Text="TC" Style="{StaticResource TextBoxAligned}" />
                                                <TextBlock Text="{Binding GroupNumber}" Style="{StaticResource TextBoxAlignedSubScript}" />
                                                <TextBlock Text=": " Style="{StaticResource TextBoxAligned}" />
                                            </TextBlock>
                                            <TextBox x:Name="TcEdit" Text="{Binding Tc,UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Width="50" Padding="0" Style="{StaticResource NotSetWhenEmpty}"  />
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Set value" Controls:AtrEditorHelper.AttachSetValueCommand="TcEdit" />
                                                        <MenuItem Header="Clear value" Command="{Binding ClearTcCommand}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                        </StackPanel>
                                        <TextBlock>
                                            <TextBlock Text="TD" />
                                            <TextBlock Text="{Binding GroupNumber}" Style="{StaticResource SubScript}" />
                                            <TextBlock Text="(Next IF bytes):" />
                                        </TextBlock>
                                        <TextBlock>
                                            <TextBlock Text="  Type: " Style="{StaticResource TextBoxAligned}" />
                                            <TextBlock Text="{Binding NextGroupType, TargetNullValue='not set'}" Style="{StaticResource TextBoxAligned}" />
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu Placement="Left" HorizontalOffset="16" VerticalOffset="16">
                                                        <MenuItem Header="Change type of next interface byte group" ItemsSource="{Binding PossibleTypesToChangeTo}" Visibility="{Binding PossibleTypesToChangeTo.Count,Converter={StaticResource ZeroToVisibilityConverter}}">
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="Command" Value="{Binding DataContext.SetNextGroupTypeCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsPresenter}} }" />
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    <Setter Property="Header" Value="{Binding Description}" />
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                        </MenuItem>
                                                        <MenuItem Header="Add interface byte group" ItemsSource="{Binding PossibleTypesToAddNextGroup}" Visibility="{Binding PossibleTypesToAddNextGroup.Count,Converter={StaticResource ZeroToVisibilityConverter}}">
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="Command" Value="{Binding DataContext.AddNextGroupTypeCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsPresenter}} }" />
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    <Setter Property="Header" Value="{Binding Description}" />
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                        </MenuItem>
                                                        <MenuItem Header="Remove next interface byte group" Command="{Binding RemoveNextGroupCommand}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                        </TextBlock>
                                        <TextBlock>
                                            <TextBlock Text="  Bytes: " /><TextBlock Text="{Binding NextBytes}" />
                                        </TextBlock>
                                    </StackPanel>
                                </HeaderedContentControl>
                            </HeaderedContentControl>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrPreambleTokenAdapter}">
                            <HeaderedContentControl Header="Preamble (TS+T0)" Template="{StaticResource SectionBoxTitleLeft}">
                                <HeaderedContentControl Template="{StaticResource SectionBoxInnerTitle}">
                                    <HeaderedContentControl.Header>
                                        <TextBlock Text="{Binding Bytes}" Margin="4" FontWeight="Bold" />
                                    </HeaderedContentControl.Header>
                                    <StackPanel Orientation="Vertical" Margin="4">
                                        <TextBlock>
                                            <TextBlock Text="Convention:" /><LineBreak />
                                            <TextBlock Text="{Binding CodingConvention}" />
                                        </TextBlock>
                                        <TextBlock>
                                            <TextBlock Text="Historical chars: " />
                                            <TextBlock Text="{Binding NumberOfHistoricalCharacters}" />
                                        </TextBlock>
                                        <TextBlock Text="Next IF bytes:" />
                                        <TextBlock Text="  Type: Global" Style="{StaticResource TextBoxAligned}" />
                                        <TextBlock>
                                            <TextBlock Text="  Bytes: " /><TextBlock Text="{Binding NextBytes}" />
                                        </TextBlock>
                                    </StackPanel>
                                </HeaderedContentControl>
                            </HeaderedContentControl>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:GlobalInterfaceBytesAdapter}">
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <TextBlock Background="Gray" Foreground="White">
                                            <TextBlock Text="Global Interface Bytes" HorizontalAlignment="Stretch" Margin="4,2,4,0" />
                                        </TextBlock>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,1" Grid.Row="0" Grid.Column="1">
                                        <DockPanel HorizontalAlignment="Stretch" Margin="4">
                                            <TextBlock Foreground="Gray" Text="Relevant Interface Bytes: " DockPanel.Dock="Left" />
                                            <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding ProtocolParameterBytes}" ItemsPanel="{StaticResource HorizontalStackPanel}" />
                                        </DockPanel>
                                    </Border>
                                    <wt:DialogPanel InnerColumnMargin="10" HorizontalAlignment="Left" Margin="4" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" >
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Fi,Fmax/Di: " Style="{StaticResource TextBoxAligned}" />
                                                    <TextBlock Text="TA" Foreground="Gray" Style="{StaticResource TextBoxAligned}" />
                                                    <TextBlock Text="1" Style="{StaticResource TextBoxAlignedSubScript}" Foreground="Gray" />
                                                    <TextBlock Text=" (Bits 8-5/4-1)" Foreground="Gray" Style="{StaticResource TextBoxAligned}" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                             <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True" wt:DialogPanel.IsSynchronisationScope="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding DiFiIsDefault}">
                                                                    Use implicit default value
                                                                </RadioButton>
                                                                <RadioButton IsChecked="{Binding DiFiIsDefault, Converter={StaticResource NegateBoolConverter}}" VerticalAlignment="Top" VerticalContentAlignment="Top">
                                                                    <TextBlock Text="Use values:" />
                                                                </RadioButton>
                                                                <wt:DialogPanel InnerColumnMargin="3" Margin="16,0,0,0">
                                                                    <ComboBox SelectedItem="{Binding FiFmax}" DisplayMemberPath="Description" ItemsSource="{Binding PossibleFiFmaxValues}" Width="150">
                                                                        <wt:DialogPanel.Caption><TextBlock Text="Fi/Fmax:" Style="{StaticResource RadioButtonTextBoxAligned}" /></wt:DialogPanel.Caption>
                                                                    </ComboBox>
                                                                    <ComboBox SelectedItem="{Binding Di}" DisplayMemberPath="Description" ItemsSource="{Binding PossibleDiValues}" Width="150">
                                                                        <wt:DialogPanel.Caption><TextBlock Text="Di:" Style="{StaticResource RadioButtonTextBoxAligned}" /></wt:DialogPanel.Caption>
                                                                    </ComboBox>
                                                                </wt:DialogPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Style="{StaticResource TextBoxAligned}">
                                                <TextBlock Text="{Binding FiFmax.Description}" /><TextBlock Text="/" /><TextBlock Text="{Binding Di.Description}" />
                                                <TextBlock Visibility="{Binding Etu, Converter={StaticResource NullToVisibilityConverter}}">
                                                    <TextBlock Text=" (" /><TextBlock Text="{Binding Etu}" /><TextBlock Text=" ETU)" />
                                                </TextBlock>
                                                <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding DiFiIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                             </TextBlock>
                                        </DockPanel>
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Extra Guard Time: " />
                                                    <TextBlock Text="TC" Foreground="Gray" />
                                                    <TextBlock Text="1" Style="{StaticResource SubScript}" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                                <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding ExtraGuardTimeIsDefault}">
                                                                    Use implicit default value
                                                                </RadioButton>
                                                                <RadioButton IsChecked="{Binding ExtraGuardTimeIsDefault, Converter={StaticResource NegateBoolConverter}}" VerticalAlignment="Top" VerticalContentAlignment="Top">
                                                                    <TextBlock>
                                                                        <TextBlock Text="Use value:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                                                        <TextBox Text="{Binding ExtraGuardTime,UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" MinWidth="30" />
                                                                    </TextBlock>
                                                                </RadioButton>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Style="{StaticResource TextBoxAligned}">
                                                <TextBlock Text="{Binding ExtraGuardTime}" />
                                                <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding ExtraGuardTimeIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </TextBlock>
                                        </DockPanel>
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Specific Mode: " />
                                                    <TextBlock Text="TA" Foreground="Gray" />
                                                    <TextBlock Text="2" Style="{StaticResource SubScript}" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                                <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True" wt:DialogPanel.IsSynchronisationScope="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding SpecificModeSupported, Converter={StaticResource NegateBoolConverter}}">
                                                                    Specific Mode not supported
                                                                </RadioButton>
                                                                <RadioButton IsChecked="{Binding SpecificModeSupported}">
                                                                        Specific Mode supported:
                                                                </RadioButton>
                                                                <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding SpecificModeSupported}">
                                                                    <ComboBox SelectedItem="{Binding SpecificModeProtocol}" DisplayMemberPath="Description" ItemsSource="{Binding SpecificModeProtocolValues}" MinWidth="80">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Text="Protocol:" Margin="0,3,5,0" />
                                                                        </wt:DialogPanel.Caption>
                                                                    </ComboBox>
                                                                    <CheckBox wt:DialogPanel.Caption="{x:Null}" Content="Use implicit Di/Fi" IsChecked="{Binding SpecificModeImplicitFiDi}" />
                                                                    <CheckBox wt:DialogPanel.Caption="{x:Null}" Content="Supports changing betw. specific &amp; negotiable mode" IsChecked="{Binding CanChangeNegotiableSpecificMode}" />
                                                                </wt:DialogPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Visibility="{Binding SpecificModeSupported, Converter={StaticResource BooleanToNonVisibilityConverter}}">
                                                <TextBlock Text="Not supported" />
                                                <TextBlock Foreground="Gray" Text=" (default)" />
                                            </TextBlock>
                                            <TextBlock Visibility="{Binding SpecificModeSupported, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <TextBlock Text="Protocol " />
                                                <TextBlock Text="{Binding SpecificModeProtocol.Name}" />
                                                <TextBlock Text=", " />
                                                <TextBlock Text="use implicit Fi/Di" Visibility="{Binding SpecificModeImplicitFiDi, Converter={StaticResource BooleanToVisibilityConverter}}" /><TextBlock Text="use Fi/Di indicated" Visibility="{Binding SpecificModeImplicitFiDi, Converter={StaticResource BooleanToNonVisibilityConverter}}" />
                                                <TextBlock Text=", " />
                                                <TextBlock Text="can change betw. specific &amp; negotiable mode" Visibility="{Binding CanChangeNegotiableSpecificMode, Converter={StaticResource BooleanToVisibilityConverter}}" /><TextBlock Text="cannot change betw. specific &amp; negotiable mode" Visibility="{Binding CanChangeNegotiableSpecificMode, Converter={StaticResource BooleanToNonVisibilityConverter}}" />
                                            </TextBlock>
                                        </DockPanel>
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Clock Stop: " />
                                                    <TextBlock Text="1" Foreground="Gray" />
                                                    <TextBlock Text="st" Style="{StaticResource SuperScript}" Foreground="Gray" />
                                                    <TextBlock Text=" TA for T=15 (Bits 8+7)" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True" wt:DialogPanel.IsSynchronisationScope="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding ClockStopSupportAndOperatingConditionsIsDefault}" Content="Clock stop is not supported and operating conditions not specified" />
                                                                <RadioButton IsChecked="{Binding ClockStopSupportAndOperatingConditionsIsDefault, Converter={StaticResource NegateBoolConverter}}" Content="Clock stop supported and operating conditions specified:" />
                                                                <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding ClockStopSupportAndOperatingConditionsIsDefault, Converter={StaticResource NegateBoolConverter}}">
                                                                    <ComboBox SelectedItem="{Binding ClockStopSupport}" DisplayMemberPath="Description" ItemsSource="{Binding ClockStopSupportValues}" MinWidth="80">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Text="Clock stop:" Margin="0,3,5,0" />
                                                                        </wt:DialogPanel.Caption>
                                                                    </ComboBox>
                                                                    <ComboBox SelectedItem="{Binding OperatingConditions}" DisplayMemberPath="Description" ItemsSource="{Binding OperatingConditionsValues}" MinWidth="80">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Text="Operating conditions:" Margin="0,3,5,0" />
                                                                        </wt:DialogPanel.Caption>
                                                                    </ComboBox>
                                                                </wt:DialogPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Style="{StaticResource TextBoxAligned}">
                                                <TextBlock Text="{Binding ClockStopSupport.Description}" />
                                                <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding ClockStopSupportAndOperatingConditionsIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </TextBlock>
                                        </DockPanel>
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Operation Conditions: " />
                                                    <TextBlock Text="1" Foreground="Gray" />
                                                    <TextBlock Text="st" Style="{StaticResource SuperScript}" Foreground="Gray" />
                                                    <TextBlock Text=" TA for T=15 (Bits 6-1)" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                            <!-- same as above - can be put into resources--><Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True" wt:DialogPanel.IsSynchronisationScope="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding ClockStopSupportAndOperatingConditionsIsDefault}" Content="Clock stop is not supported and operating conditions not specified" />
                                                                <RadioButton IsChecked="{Binding ClockStopSupportAndOperatingConditionsIsDefault, Converter={StaticResource NegateBoolConverter}}" Content="Clock stop supported and operating conditions specified:" />
                                                                <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding ClockStopSupportAndOperatingConditionsIsDefault, Converter={StaticResource NegateBoolConverter}}">
                                                                    <ComboBox SelectedItem="{Binding ClockStopSupport}" DisplayMemberPath="Description" ItemsSource="{Binding ClockStopSupportValues}" MinWidth="80">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Text="Clock stop:" Margin="0,3,5,0" />
                                                                        </wt:DialogPanel.Caption>
                                                                    </ComboBox>
                                                                    <ComboBox SelectedItem="{Binding OperatingConditions}" DisplayMemberPath="Description" ItemsSource="{Binding OperatingConditionsValues}" MinWidth="80">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Text="Operating conditions:" Margin="0,3,5,0" />
                                                                        </wt:DialogPanel.Caption>
                                                                    </ComboBox>
                                                                </wt:DialogPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Style="{StaticResource TextBoxAligned}">
                                                <TextBlock Text="{Binding OperatingConditions.Description}" />
                                                <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding ClockStopSupportAndOperatingConditionsIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </TextBlock>
                                        </DockPanel>
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="SPU Contact: " />
                                                    <TextBlock Text="1" Foreground="Gray" />
                                                    <TextBlock Text="st" Style="{StaticResource SuperScript}" Foreground="Gray" />
                                                    <TextBlock Text=" TB for T=15" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                            <Image DockPanel.Dock="Right" VerticalAlignment="Top" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True" wt:DialogPanel.IsSynchronisationScope="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding SpuUseIsDefault}" Content="Standard or proprietary used (SPU) contact not used by default" />
                                                                <RadioButton IsChecked="{Binding SpuUseIsNotUsed}" Content="Standard or proprietary used (SPU) contact not used explicitly" />
                                                                <RadioButton IsChecked="{Binding SpuUseIsStandard}" Content="Standard use of SPU contact" />
                                                                <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding SpuUseIsStandard}">
                                                                    <StackPanel Orientation="Vertical">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Text="RFU bits (Bit 7-1):" Style="{StaticResource TextBoxAligned}" />
                                                                        </wt:DialogPanel.Caption>
                                                                        <TextBox Text="{Binding SpuType, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" />
                                                                        <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                                    </StackPanel>
                                                                </wt:DialogPanel>
                                                                    <RadioButton IsChecked="{Binding SpuUseIsProprietary}" Content="Proprietary use of SPU contact" />
                                                                <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding SpuUseIsProprietary}">
                                                                    <StackPanel Orientation="Vertical">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Text="Raw bits (Bit 7-1):" Style="{StaticResource TextBoxAligned}" />
                                                                        </wt:DialogPanel.Caption>
                                                                        <TextBox Text="{Binding SpuType, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" />
                                                                        <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                                    </StackPanel>
                                                                    <CheckBox wt:DialogPanel.Caption="{x:Null}" IsChecked="{Binding SpuTypeEtsiCoding.LowImpedanceOnIoLineAvailable }" Content="Low impedance on I/O line available" />
                                                                    <CheckBox wt:DialogPanel.Caption="{x:Null}" IsChecked="{Binding SpuTypeEtsiCoding.InterChipUSBSupported }" Content="Inter-chip USB supported" />
                                                                    <CheckBox wt:DialogPanel.Caption="{x:Null}" IsChecked="{Binding SpuTypeEtsiCoding.ClfInterfaceSupported }" Content="CLF interface supported" />
                                                                    <ComboBox SelectedItem="{Binding SpuTypeEtsiCoding.SecureChannelSupport}" DisplayMemberPath="Description" ItemsSource="{Binding SpuTypeEtsiCoding.SecureChannelSupportValues}" MinWidth="80">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Text="Secure channel support:" Margin="0,3,5,0" />
                                                                        </wt:DialogPanel.Caption>
                                                                    </ComboBox>
                                                                </wt:DialogPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Style="{StaticResource TextBoxAligned}">
                                                    <TextBlock Text="{Binding SpuUse.Description}" />
                                                    <TextBlock Visibility="{Binding SpuIsInUse, Converter={StaticResource BooleanToVisibilityConverter}}"> 
                                                        <TextBlock Text="Type " /><TextBlock Text="{Binding SpuType}" />
                                                    </TextBlock>
                                                    <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding SpuUseIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                </TextBlock>
                                                <wt:DialogPanel Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}" InnerColumnMargin="3" DataContext="{Binding SpuTypeEtsiCoding}" wt:DialogPanel.IsSynchronisationScope="True">
                                                    <TextBlock wt:DialogPanel.Caption="{x:Null}" Text="Interpreted as defined in ETSI TS 102221:" />
                                                    <TextBlock wt:DialogPanel.Caption="  Low impedance on I/O line available:" Text="{Binding LowImpedanceOnIoLineAvailable, Converter={StaticResource BooleanToTextConverter}}" />
                                                    <TextBlock wt:DialogPanel.Caption="  Inter-chip USB supported:" Text="{Binding InterChipUSBSupported, Converter={StaticResource BooleanToTextConverter}}" />
                                                    <TextBlock wt:DialogPanel.Caption="  CLF interface supported:" Text="{Binding ClfInterfaceSupported, Converter={StaticResource BooleanToTextConverter}}" />
                                                    <TextBlock wt:DialogPanel.Caption="  Secure channel supported:" Text="{Binding SecureChannelSupport.Name}" />
                                                </wt:DialogPanel>
                                            </StackPanel>
                                        </DockPanel>
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="VPP Programming: " />
                                                    <TextBlock Text="TB" Foreground="Gray" />
                                                    <TextBlock Text="1" Style="{StaticResource SubScript}" Foreground="Gray" />
                                                    <TextBlock Text="/TB" Foreground="Gray" />
                                                    <TextBlock Text="2" Style="{StaticResource SubScript}" Foreground="Gray" />
                                                    <TextBlock Text=" (deprecated)" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                            <Image DockPanel.Dock="Right" VerticalAlignment="Top" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True" wt:DialogPanel.IsSynchronisationScope="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding IsVppConnectedIsDefault}" Content="Indicate VPP is not connected by default" />
                                                                <RadioButton IsChecked="{Binding IsVppConnected,Converter={StaticResource NegateBoolConverter},TargetNullValue=false}" Content="Indicate VPP is not connected explicitly" />
                                                                <RadioButton IsChecked="{Binding IsVppConnected,TargetNullValue=false}" Content="Indicate VPP is connected:" />
                                                                <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding IsVppConnected, TargetNullValue=false}">
                                                                    <StackPanel wt:DialogPanel.Caption="Programming voltage:" Orientation="Vertical">
                                                                        <TextBox Text="{Binding VppProgrammingVoltage, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" />
                                                                        <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                                    </StackPanel>
                                                                    <ComboBox SelectedItem="{Binding VppProgrammingCurrent}" DisplayMemberPath="Description" ItemsSource="{Binding VppProgrammingCurrentValues}" MinWidth="80">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Text="Programming current:" Margin="0,3,5,0" />
                                                                        </wt:DialogPanel.Caption>
                                                                    </ComboBox>
                                                                </wt:DialogPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Style="{StaticResource TextBoxAligned}" Visibility="{Binding IsVppConnected, Converter={StaticResource BooleanToVisibilityConverter}, TargetNullValue=false}">
                                                    <TextBlock Text="{Binding VppProgrammingVoltage}" /><TextBlock Text=" V, " />
                                                    <TextBlock Text="{Binding VppProgrammingCurrent.Description}" />
                                                </TextBlock>
                                                <TextBlock Style="{StaticResource TextBoxAligned}" Visibility="{Binding IsVppConnected, Converter={StaticResource BooleanToNonVisibilityConverter}, TargetNullValue=false}" Text="Not connected" />
                                                <TextBlock Foreground="Gray" Text=" (default)" Style="{StaticResource TextBoxAligned}" Visibility="{Binding IsVppConnectedIsDefault, Converter={StaticResource BooleanToVisibilityConverter}, TargetNullValue=false}" />
                                            </StackPanel>
                                        </DockPanel>
                                    </wt:DialogPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:T0ProtocolParameterAdapter}">
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <DockPanel Background="Gray">
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/PenLight.png" Height="16" Stretch="Uniform" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Remove indication of this protocol" Command="{Binding RemoveIndicationCommand}" />
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <TextBlock Text="T=0 Protocol" HorizontalAlignment="Stretch" Margin="4,2,4,0" Foreground="White" />
                                        </DockPanel>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,1" Grid.Row="0" Grid.Column="1">
                                        <DockPanel HorizontalAlignment="Stretch" Margin="4">
                                            <TextBlock Foreground="Gray" Text="Relevant Interface Bytes: " DockPanel.Dock="Left" Visibility="{Binding ProtocolParameterBytes.Count, Converter={StaticResource ZeroToVisibilityConverter}}" />
                                            <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding ProtocolParameterBytes}" ItemsPanel="{StaticResource HorizontalStackPanel}" />
                                            <TextBlock Visibility="{Binding ProtocolParameterBytes.Count, Converter={StaticResource ZeroToNonVisibilityConverter}}" Foreground="Gray" Text="indicated implicitly" />
                                        </DockPanel>
                                    </Border>
                                    <wt:DialogPanel InnerColumnMargin="10" HorizontalAlignment="Left" Margin="4" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" >
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Waiting Time (WI): " />
                                                    <TextBlock Text="TC" Foreground="Gray" />
                                                    <TextBlock Text="2" Style="{StaticResource SubScript}" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding WaitingTimeIntegerIsDefault}">
                                                                    Use implicit default value
                                                                </RadioButton>
                                                                <RadioButton IsChecked="{Binding WaitingTimeIntegerIsDefault, Converter={StaticResource NegateBoolConverter}}">
                                                                    <TextBlock>
                                                                        <TextBlock Text="Use value:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                                                        <TextBox Text="{Binding WaitingTimeInteger,UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" MinWidth="30" />
                                                                    </TextBlock>
                                                                </RadioButton>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Style="{StaticResource TextBoxAligned}">
                                                <TextBlock Text="{Binding WaitingTimeInteger}" />
                                                <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding WaitingTimeIntegerIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </TextBlock>
                                        </DockPanel>
                                    </wt:DialogPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:T1ProtocolParameterAdapter}">
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <DockPanel Background="Gray">
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/PenLight.png" Height="16" Stretch="Uniform" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Remove indication of this protocol" Command="{Binding RemoveIndicationCommand}" />
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <TextBlock Text="T=1 Protocol" HorizontalAlignment="Stretch" Margin="4,2,4,0" Foreground="White" />
                                        </DockPanel>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,1" Grid.Row="0" Grid.Column="1">
                                        <DockPanel HorizontalAlignment="Stretch" Margin="4">
                                            <TextBlock Foreground="Gray" Text="Relevant Interface Bytes: " DockPanel.Dock="Left" />
                                            <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding ProtocolParameterBytes}" ItemsPanel="{StaticResource HorizontalStackPanel}" />
                                        </DockPanel>
                                    </Border>
                                    <wt:DialogPanel InnerColumnMargin="10" HorizontalAlignment="Left" Margin="4" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" >
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Information Field Size (IFSC): " />
                                                    <TextBlock Text="1" Foreground="Gray" />
                                                    <TextBlock Text="st" Style="{StaticResource SuperScript}" Foreground="Gray" />
                                                    <TextBlock Text=" TA" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding InformationFieldSizeIsDefault}">
                                                                    Use implicit default value
                                                                </RadioButton>
                                                                <RadioButton IsChecked="{Binding InformationFieldSizeIsDefault, Converter={StaticResource NegateBoolConverter}}">
                                                                    <TextBlock>
                                                                        <TextBlock Text="Use value:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                                                        <TextBox Text="{Binding InformationFieldSize,UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" MinWidth="30" />
                                                                    </TextBlock>
                                                                </RadioButton>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Style="{StaticResource TextBoxAligned}">
                                                <TextBlock Text="{Binding InformationFieldSize}" />
                                                <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding InformationFieldSizeIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </TextBlock>
                                        </DockPanel>
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Block Waiting Time (BWI): " />
                                                    <TextBlock Text="1" Foreground="Gray" />
                                                    <TextBlock Text="st" Style="{StaticResource SuperScript}" Foreground="Gray" />
                                                    <TextBlock Text=" TB (Bits 8-5)" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding BlockAndCharacterWaitingTimeIsDefault}">
                                                                    Use implicit default value
                                                                </RadioButton>
                                                                <RadioButton IsChecked="{Binding BlockAndCharacterWaitingTimeIsDefault, Converter={StaticResource NegateBoolConverter}}">
                                                                    <TextBlock Text="Use value:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                                                </RadioButton>
                                                                <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding BlockAndCharacterWaitingTimeIsDefault, Converter={StaticResource NegateBoolConverter}}" wt:DialogPanel.IsSynchronisationScope="True">
                                                                    <TextBox Text="{Binding BlockWaitingTime,UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" MinWidth="30">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Margin="0,3,5,0">Block waiting time:</TextBlock>
                                                                        </wt:DialogPanel.Caption>
                                                                    </TextBox>
                                                                    <TextBox Text="{Binding CharacterWaitingTime,UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" MinWidth="30">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Margin="0,3,5,0">Character waiting time:</TextBlock>
                                                                        </wt:DialogPanel.Caption>
                                                                    </TextBox>
                                                                </wt:DialogPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Style="{StaticResource TextBoxAligned}">
                                                <TextBlock Text="{Binding BlockWaitingTime}" />
                                                <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding BlockAndCharacterWaitingTimeIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </TextBlock>
                                        </DockPanel>
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Character Waiting Time (CWI): " />
                                                    <TextBlock Text="1" Foreground="Gray" />
                                                    <TextBlock Text="st" Style="{StaticResource SuperScript}" Foreground="Gray" />
                                                    <TextBlock Text=" TB (Bits 4-1)" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                            <!-- same as above-->
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding BlockAndCharacterWaitingTimeIsDefault}">
                                                                    Use implicit default value
                                                                </RadioButton>
                                                                <RadioButton IsChecked="{Binding BlockAndCharacterWaitingTimeIsDefault, Converter={StaticResource NegateBoolConverter}}">
                                                                        <TextBlock Text="Use value:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                                                </RadioButton>
                                                                <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding BlockAndCharacterWaitingTimeIsDefault, Converter={StaticResource NegateBoolConverter}}" wt:DialogPanel.IsSynchronisationScope="True">
                                                                    <TextBox Text="{Binding BlockWaitingTime,UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" MinWidth="30">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Margin="0,3,5,0">Block waiting time:</TextBlock>
                                                                        </wt:DialogPanel.Caption>
                                                                    </TextBox>
                                                                    <TextBox Text="{Binding CharacterWaitingTime,UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" MinWidth="30">
                                                                        <wt:DialogPanel.Caption>
                                                                            <TextBlock Margin="0,3,5,0">Character waiting time:</TextBlock>
                                                                        </wt:DialogPanel.Caption>
                                                                    </TextBox>
                                                                </wt:DialogPanel>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Style="{StaticResource TextBoxAligned}">
                                                <TextBlock Text="{Binding CharacterWaitingTime}" />
                                                <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding BlockAndCharacterWaitingTimeIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </TextBlock>
                                        </DockPanel>
                                        <DockPanel>
                                            <wt:DialogPanel.Caption>
                                                <TextBlock>
                                                    <TextBlock Text="Redundancy Code: " />
                                                    <TextBlock Text="1" Foreground="Gray" />
                                                    <TextBlock Text="st" Style="{StaticResource SuperScript}" Foreground="Gray" />
                                                    <TextBlock Text=" TC (Bit 8)" Foreground="Gray" />
                                                </TextBlock>
                                            </wt:DialogPanel.Caption>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                                <Controls:AtrEditorHelper.AttachPopupToImage >
                                                    <Popup AllowsTransparency="True">
                                                        <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                            <StackPanel Orientation="Vertical">
                                                                <RadioButton IsChecked="{Binding RedundancyCodeIsDefault}">
                                                                    Use implicit default value
                                                                </RadioButton>
                                                                <RadioButton IsChecked="{Binding RedundancyCodeIsDefault, Converter={StaticResource NegateBoolConverter}}">
                                                                    <TextBlock>
                                                                        <TextBlock Text="Use value:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                                                        <ComboBox SelectedItem="{Binding RedundancyCode}" DisplayMemberPath="Description" ItemsSource="{Binding RedundancyCodeValues}" Margin="5,0,0,0" MinWidth="30" />
                                                                    </TextBlock>
                                                                </RadioButton>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Controls:AtrEditorHelper.AttachPopupToImage>
                                            </Image>
                                            <TextBlock Style="{StaticResource TextBoxAligned}">
                                                <TextBlock Text="{Binding RedundancyCode.Description}" />
                                                <TextBlock Foreground="Gray" Text=" (default)" Visibility="{Binding RedundancyCodeIsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </TextBlock>
                                        </DockPanel>
                                    </wt:DialogPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:UnknownProtocolParameterAdapter}">
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <DockPanel Background="Gray">
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/PenLight.png" Height="16" Stretch="Uniform" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Remove indication of this protocol" Command="{Binding RemoveIndicationCommand}" />
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <TextBlock HorizontalAlignment="Stretch" Margin="4,2,4,0" Foreground="White">
                                                <TextBlock Text="{Binding ProtocolType.Description}" />
                                                <TextBlock Text="Protocol" />
                                            </TextBlock>
                                        </DockPanel>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,0" Grid.Row="0" Grid.Column="1">
                                        <DockPanel HorizontalAlignment="Stretch" Margin="4">
                                            <TextBlock Foreground="Gray" Text="Relevant Interface Bytes: " DockPanel.Dock="Left" />
                                            <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding ProtocolParameterBytes}" ItemsPanel="{StaticResource HorizontalStackPanel}" />
                                        </DockPanel>
                                    </Border>
                                </Grid>
                            </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:UnsetProtocolParameterByteAdapter}">
                            <TextBlock Margin="0,0,4,0" Text="??" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:IrrelevantProtocolParameterByteAdapter}">
                            <TextBlock Margin="0,0,4,0" Text="--" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:ProtocolParameterByteValueAdapter}">
                            <TextBlock Margin="0,0,4,0" Text="{Binding Value}" FontWeight="Bold" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrCompactTlvHistoricalBytesAdapter}">
                            <DataTemplate.Resources>
                                <Popup AllowsTransparency="True" x:Key="ApplicationIdentifierPopup" >
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <TextBlock><TextBlock Text="AID:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                            <StackPanel Orientation="Vertical">
                                                <TextBox Text="{Binding Aid,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true}" Margin="5,0,0,0" MinWidth="100" />
                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}"  />
                                            </StackPanel>
                                                </TextBlock>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectApplicationIdentifierAdapter}">
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel>
                                            <Grid Margin="0,0,5,0" HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="0,0,5,0" Text="Application Identifier (0x4F)" FontWeight="Bold" />
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                            </Grid>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource ApplicationIdentifierPopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                        </DockPanel>
                                        <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}" >
                                            <wt:ContentUnavailableControl.DefaultContent>
                                                <DockPanel Margin="10,0,0,0">
                                                    <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                    <TextBlock Text="{Binding DataError}" />
                                                </DockPanel>
                                            </wt:ContentUnavailableControl.DefaultContent>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <TextBlock wt:DialogPanel.Caption="Application Identifier" Text="{Binding Aid}" />
                                                <TextBlock wt:DialogPanel.Caption="Registered Identifier (RID)" Text="{Binding Rid, TargetNullValue='unknown'}" />
                                            </wt:DialogPanel>
                                        </wt:ContentUnavailableControl>
                                    </StackPanel>
                                </DataTemplate>
                                <Popup AllowsTransparency="True" x:Key="CardCapabilitiesPopup" wt:DialogPanel.IsSynchronisationScope="True"  >
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <TextBlock><TextBlock Text="1" /><TextBlock Text=" st " Style="{StaticResource SuperScript}" /><TextBlock Text=" byte of Card Capabilites: " /><TextBlock Text="(always indicated if object is present)" Foreground="gray" /></TextBlock>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="17,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Supports DF selection by full name" IsChecked="{Binding SupportsDFSelectionByFullName}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Supports DF selection by partial name" IsChecked="{Binding SupportsDFSelectionByPartialName}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Supports DF selection by path" IsChecked="{Binding SupportsDFSelectionByPath}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Supports DF selection by File ID" IsChecked="{Binding SupportsDFSelectionByFileID}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Supports implicit DF selection" IsChecked="{Binding SupportsImplicitDFSelection}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Supports EF short file IDs" IsChecked="{Binding SupportsShortFileID}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Supports record numbers" IsChecked="{Binding SupportsRecordNumber}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Supports record IDs" IsChecked="{Binding SupportsRecordID}" />
                                            </wt:DialogPanel>
                                            <CheckBox IsChecked="{Binding IsWriteFunctionsBehaviourAndDataUnitSizeIndicated}">
                                                <TextBlock><TextBlock Text="Indicate 2" /><TextBlock Text=" nd " Style="{StaticResource SuperScript}" /><TextBlock Text=" byte of Card Capabilites: " /></TextBlock>
                                            </CheckBox>
                                            <wt:DialogPanel InnerColumnMargin="10" IsEnabled="{Binding IsWriteFunctionsBehaviourAndDataUnitSizeIndicated}">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="17,0,0,0" Text="{Binding}" VerticalAlignment="Center">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Foreground" Value="Gray" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <ComboBox wt:DialogPanel.Caption="Write function behaviour" SelectedItem="{Binding WriteFunctionsBehaviour}" ItemsSource="{Binding WriteFunctionsBehaviourValues}" />
                                                <ComboBox wt:DialogPanel.Caption="Data unit size (nibbles)" SelectedItem="{Binding DataUnitSize}" ItemsSource="{Binding DataUnitSizeValues}" />
                                            </wt:DialogPanel>
                                            <CheckBox IsChecked="{Binding IsExtendedLengthAndLogicalChannelsIndicated}" IsEnabled="{Binding IsWriteFunctionsBehaviourAndDataUnitSizeIndicated}">
                                                <TextBlock><TextBlock Text="Indicate 3" /><TextBlock Text=" rd " Style="{StaticResource SuperScript}" /><TextBlock Text=" byte of Card Capabilites: " /></TextBlock>
                                            </CheckBox>
                                            <wt:DialogPanel InnerColumnMargin="10" IsEnabled="{Binding IsExtendedLengthAndLogicalChannelsIndicated}">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="17,0,0,0" Text="{Binding}" VerticalAlignment="Center">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Foreground" Value="Gray" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Supports extended Lc and Le" IsChecked="{Binding SupportsExtendedLcAndLe}" />
                                                <ComboBox wt:DialogPanel.Caption="Logical channel assignment" SelectedItem="{Binding LogicalChannelAssignment}" ItemsSource="{Binding LogicalChannelAssignmentValues}" />
                                                <StackPanel wt:DialogPanel.Caption="Maximum number of logical channels">
                                                    <TextBox Text="{Binding MaximumNumberOfLogicalChannels, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" />
                                                    <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                </StackPanel>
                                            </wt:DialogPanel>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectCardCapabilitiesAdapter}">
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel>
                                            <Grid Margin="0,0,5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="0,0,5,0" Text="Card Capabilities (0x47)" FontWeight="Bold" />
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                            </Grid>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource CardCapabilitiesPopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                        </DockPanel>
                                        <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}" >
                                            <wt:ContentUnavailableControl.DefaultContent>
                                                <DockPanel Margin="10,0,0,0">
                                                    <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                    <TextBlock Text="{Binding DataError}" />
                                                </DockPanel>
                                            </wt:ContentUnavailableControl.DefaultContent>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <TextBlock wt:DialogPanel.Caption="Supports DF selection by full name" Text="{Binding SupportsDFSelectionByFullName, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Supports DF selection by partial name" Text="{Binding SupportsDFSelectionByPartialName, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Supports DF selection by path" Text="{Binding SupportsDFSelectionByPath, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Supports DF selection by File ID" Text="{Binding SupportsDFSelectionByFileID, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Supports implicit DF selection" Text="{Binding SupportsImplicitDFSelection, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Supports EF short file IDs" Text="{Binding SupportsShortFileID, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Supports record numbers" Text="{Binding SupportsRecordNumber, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Supports record IDs" Text="{Binding SupportsRecordID, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Write function behaviour" Text="{Binding WriteFunctionsBehaviour.Description, FallbackValue='not indicated'}" />
                                                <TextBlock wt:DialogPanel.Caption="Data unit size" Text="{Binding DataUnitSize, StringFormat='{}{0} nibbles', TargetNullValue='not indicated'}" />
                                                <TextBlock wt:DialogPanel.Caption="Supports extended Lc and Le" Text="{Binding SupportsExtendedLcAndLe, TargetNullValue='not indicated', Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Logical channel assignment" Text="{Binding LogicalChannelAssignment.Description, FallbackValue='not indicated'}" />
                                                <TextBlock wt:DialogPanel.Caption="Maximum number of logical channels" Text="{Binding MaximumNumberOfLogicalChannels, TargetNullValue='not indicated'}" />
                                            </wt:DialogPanel>
                                        </wt:ContentUnavailableControl>
                                    </StackPanel>
                                </DataTemplate>
                                <Popup AllowsTransparency="True" x:Key="CardIssuerDataPopup" >
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <TextBlock><TextBlock Text="Card Issuer Data:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                            <StackPanel Orientation="Vertical">
                                                <TextBox Text="{Binding CardIssuerData,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true}" Margin="5,0,0,0" MinWidth="100" />
                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}"  />
                                            </StackPanel></TextBlock>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectCardIssuerDataAdapter}">
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel>
                                            <Grid Margin="0,0,5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="0,0,5,0" Text="Card Issuer Data (0x45)" FontWeight="Bold" />
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                            </Grid>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource CardIssuerDataPopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                        </DockPanel>
                                        <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}" >
                                            <wt:ContentUnavailableControl.DefaultContent>
                                                <DockPanel Margin="10,0,0,0">
                                                    <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                    <TextBlock Text="{Binding DataError}" />
                                                </DockPanel>
                                            </wt:ContentUnavailableControl.DefaultContent>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <TextBlock wt:DialogPanel.Caption="Card issuer data value" Text="{Binding CardIssuerData}" />
                                            </wt:DialogPanel>
                                        </wt:ContentUnavailableControl>
                                    </StackPanel>
                                </DataTemplate>
                                <Popup AllowsTransparency="True" x:Key="CardServiceDataPopup" >
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <TextBlock><TextBlock Text="1" /><TextBlock Text=" st (and only)" Style="{StaticResource SuperScript}" /><TextBlock Text=" byte of Card Services: " /></TextBlock>
                                            <wt:DialogPanel InnerColumnMargin="10" >
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="17,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Selection by partial DF name" IsChecked="{Binding SupportsApplicationSelectionByPartialDFName}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Direct application selection by full DF name" IsChecked="{Binding SupportsApplicationSelectionByFullDFName}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Data objects available in DIR file" IsChecked="{Binding DataObjectsAvailableInDirFile}" />
                                                <CheckBox wt:DialogPanel.Caption="{x:Null}" Margin="17,0,0,0" Content="Data objects available in ATR file" IsChecked="{Binding DataObjectsAvailableInAtrFile}" />
                                                <ComboBox wt:DialogPanel.Caption="File I/O services by" SelectedItem="{Binding FileIOServicesMethod}" ItemsSource="{Binding FileIOServicesMethodValues}" />
                                            </wt:DialogPanel>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectCardServiceDataAdapter}">
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel>
                                            <Grid Margin="0,0,5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="0,0,5,0" Text="Card Service Data (0x43)" FontWeight="Bold" />
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                            </Grid>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource CardServiceDataPopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                        </DockPanel>
                                        <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}" >
                                            <wt:ContentUnavailableControl.DefaultContent>
                                                <DockPanel Margin="10,0,0,0">
                                                    <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                    <TextBlock Text="{Binding DataError}" />
                                                </DockPanel>
                                            </wt:ContentUnavailableControl.DefaultContent>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <TextBlock wt:DialogPanel.Caption="Selection by partial DF name" Text="{Binding SupportsApplicationSelectionByPartialDFName, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Direct application selection by full DF name" Text="{Binding SupportsApplicationSelectionByFullDFName, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Data objects available in DIR file" Text="{Binding DataObjectsAvailableInDirFile, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="Data objects available in ATR file" Text="{Binding DataObjectsAvailableInAtrFile, Converter={StaticResource BooleanToTextConverter}}" />
                                                <TextBlock wt:DialogPanel.Caption="File I/O services by" Text="{Binding FileIOServicesMethod.Description}" />
                                            </wt:DialogPanel>
                                        </wt:ContentUnavailableControl>
                                    </StackPanel>
                                </DataTemplate>
                                <Popup AllowsTransparency="True" x:Key="CountryCodePopup" wt:DialogPanel.IsSynchronisationScope="True"  >
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="0,3,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <StackPanel wt:DialogPanel.Caption="Country:" Orientation="Vertical">
                                                    <ComboBox SelectedItem="{Binding Country}" IsEditable="true" Text="{Binding CountryText,ValidatesOnExceptions=True}" ItemsSource="{Binding CountryValues}" />
                                                    <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                </StackPanel>
                                                <StackPanel wt:DialogPanel.Caption="National Date:" Orientation="Vertical">
                                                    <TextBox Text="{Binding NationalDate,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true}" Margin="5,0,0,0" MinWidth="100" />
                                                    <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                </StackPanel>
                                            </wt:DialogPanel>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectCountryCodeAdapter}">
                                        <StackPanel Orientation="Vertical">
                                            <DockPanel>
                                                <Grid Margin="0,0,5,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                    </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="0,0,5,0" Text="Country Code (0x41)" FontWeight="Bold" />
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                                </Grid>
                                                <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource CountryCodePopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                            </DockPanel>
                                        <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}" >
                                            <wt:ContentUnavailableControl.DefaultContent>
                                                <DockPanel Margin="10,0,0,0">
                                                    <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                    <TextBlock Text="{Binding DataError}" />
                                                </DockPanel>
                                            </wt:ContentUnavailableControl.DefaultContent>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <TextBlock wt:DialogPanel.Caption="Country" Text="{Binding Country}" />
                                                <TextBlock wt:DialogPanel.Caption="National Date" Text="{Binding NationalDate}" />
                                            </wt:DialogPanel>
                                        </wt:ContentUnavailableControl>
                                    </StackPanel>
                                </DataTemplate>
                                <Popup AllowsTransparency="True" x:Key="InitialAccessDataPopup" wt:DialogPanel.IsSynchronisationScope="true"  >
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <RadioButton IsChecked="{Binding IsInitialAccessDataReadBinary}" Content="Use Read Binary to get Initial Access Data" />
                                            <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding IsInitialAccessDataReadBinary}" InnerColumnMargin="5">
                                                <StackPanel Orientation="Vertical">
                                                    <wt:DialogPanel.Caption>
                                                        <CheckBox Content="Short File ID:" Margin="0,3,0,0" IsChecked="{Binding IsTransparentShortFileIdDefined}" />
                                                    </wt:DialogPanel.Caption>
                                                    <TextBox Text="{Binding TransparentShortFileId, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" MinWidth="30" />
                                                    <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                </StackPanel>
                                                <StackPanel Orientation="Vertical">
                                                    <wt:DialogPanel.Caption>
                                                        <TextBlock Text="Length of Data to retrieve:" Margin="0,3,0,0" />
                                                    </wt:DialogPanel.Caption>
                                                    <TextBox Text="{Binding LengthToReadBinary, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" MinWidth="30" />
                                                    <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                </StackPanel>
                                            </wt:DialogPanel>
                                            <RadioButton IsChecked="{Binding IsInitialAccessDataReadRecord}" Content="Use Read record to get Initial Access Data" />
                                            <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding IsInitialAccessDataReadRecord}" InnerColumnMargin="5">
                                                <StackPanel Orientation="Vertical">
                                                    <wt:DialogPanel.Caption>
                                                        <TextBlock Text="Short File ID:" Margin="0,3,0,0" />
                                                    </wt:DialogPanel.Caption>
                                                    <TextBox Text="{Binding RecordShortFileId, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" MinWidth="30" />
                                                    <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                </StackPanel>
                                                <StackPanel Orientation="Vertical">
                                                    <wt:DialogPanel.Caption>
                                                        <TextBlock Text="Length of Data to retrieve:" Margin="0,3,0,0" />
                                                    </wt:DialogPanel.Caption>
                                                    <TextBox Text="{Binding LengthToReadRecord, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" MinWidth="30" />
                                                    <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                </StackPanel>
                                            </wt:DialogPanel>
                                            <RadioButton IsChecked="{Binding IsInitialAccessDataCompleteApdu}" Content="Use a custom APDU to get Initial Access Data" />
                                            <wt:DialogPanel Margin="16,0,0,0" IsEnabled="{Binding IsInitialAccessDataCompleteApdu}" InnerColumnMargin="5">
                                                <StackPanel Orientation="Vertical">
                                                    <wt:DialogPanel.Caption>
                                                        <TextBlock Text="APDU (CLA, INS, P1, P2, LE):" Margin="0,3,0,0" />
                                                    </wt:DialogPanel.Caption>
                                                    <TextBox Text="{Binding CustomApdu, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" />
                                                    <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                </StackPanel>
                                            </wt:DialogPanel>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectInitialAccessDataAdapter}">
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel>
                                            <Grid Margin="0,0,5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="0,0,5,0" Text="Initial Access Data (0x44)" FontWeight="Bold" />
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                            </Grid>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource InitialAccessDataPopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                        </DockPanel>
                                        <wt:DialogPanel InnerColumnMargin="10" >
                                            <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}">
                                                <wt:ContentUnavailableControl.DefaultContent>
                                                    <DockPanel Margin="10,0,0,0">
                                                        <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                        <TextBlock Text="{Binding DataError}" />
                                                    </DockPanel>
                                                </wt:ContentUnavailableControl.DefaultContent>
                                                <wt:DialogPanel InnerColumnMargin="10">
                                                    <wt:DialogPanel.CaptionTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                        </DataTemplate>
                                                    </wt:DialogPanel.CaptionTemplate>
                                                    <TextBlock wt:DialogPanel.Caption="Initial Access Data APDU" Text="{Binding InitialAccessDataApdu}" />
                                                </wt:DialogPanel>
                                            </wt:ContentUnavailableControl>
                                        </wt:DialogPanel>
                                    </StackPanel>
                                </DataTemplate>
                                <Popup AllowsTransparency="True" x:Key="IssuerIdentificationNumberPopup" >
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <TextBlock><TextBlock Text="Issuer Identification Number:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                            <StackPanel Orientation="Vertical">
                                                <TextBox Text="{Binding IssuerIdentificationNumber,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true}" Margin="5,0,0,0" MinWidth="100" />
                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}"  />
                                            </StackPanel></TextBlock>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectIssuerIdentificationNumberAdapter}">
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel>
                                            <Grid Margin="0,0,5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="0,0,5,0" Text="Issuer Identification Number (0x42)" FontWeight="Bold" />
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                            </Grid>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource IssuerIdentificationNumberPopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                        </DockPanel>
                                        <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}" >
                                            <wt:ContentUnavailableControl.DefaultContent>
                                                <DockPanel Margin="10,0,0,0">
                                                    <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                    <TextBlock Text="{Binding DataError}" />
                                                </DockPanel>
                                            </wt:ContentUnavailableControl.DefaultContent>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <TextBlock wt:DialogPanel.Caption="Issuer identification number" Text="{Binding IssuerIdentificationNumber}" />
                                            </wt:DialogPanel>
                                        </wt:ContentUnavailableControl>
                                    </StackPanel>
                                </DataTemplate>
                                <Popup AllowsTransparency="True" x:Key="PreIssuingDataPopup" >
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <TextBlock><TextBlock Text="PreIssuingData:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                            <StackPanel Orientation="Vertical">
                                                <TextBox Text="{Binding PreIssuingData,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true}" Margin="5,0,0,0" MinWidth="100" />
                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}"  />
                                            </StackPanel></TextBlock>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectPreIssuingDataAdapter}">
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel>
                                            <Grid Margin="0,0,5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="0,0,5,0" Text="Pre-Issuing Data (0x46)" FontWeight="Bold" />
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                            </Grid>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource PreIssuingDataPopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                        </DockPanel>
                                        <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}" >
                                            <wt:ContentUnavailableControl.DefaultContent>
                                                <DockPanel Margin="10,0,0,0">
                                                    <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                    <TextBlock Text="{Binding DataError}" />
                                                </DockPanel>
                                            </wt:ContentUnavailableControl.DefaultContent>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <TextBlock wt:DialogPanel.Caption="Pre-issuing data value" Text="{Binding PreIssuingData}" />
                                            </wt:DialogPanel>
                                        </wt:ContentUnavailableControl>
                                    </StackPanel>
                                </DataTemplate>
                                <Popup AllowsTransparency="True" x:Key="RFUDataPopup" >
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <TextBlock><TextBlock Text="RFU value:" Style="{StaticResource RadioButtonTextBoxAligned}" />
                                            <StackPanel Orientation="Vertical">
                                                <TextBox Text="{Binding RFUValue,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true}" Margin="5,0,0,0" MinWidth="100" />
                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}"  />
                                            </StackPanel></TextBlock>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectRFUAdapter}">
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel>
                                            <Grid Margin="0,0,5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Margin="0,0,5,0" Text="{Binding Tag, StringFormat='RFU (0x{0:X2})'}" FontWeight="Bold" />
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                            </Grid>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource RFUDataPopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                        </DockPanel>
                                        <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}" >
                                            <wt:ContentUnavailableControl.DefaultContent>
                                                <DockPanel Margin="10,0,0,0">
                                                    <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                    <TextBlock Text="{Binding DataError}" />
                                                </DockPanel>
                                            </wt:ContentUnavailableControl.DefaultContent>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <TextBlock wt:DialogPanel.Caption="RFU data value" Text="{Binding RFUValue}" />
                                            </wt:DialogPanel>
                                        </wt:ContentUnavailableControl>
                                    </StackPanel>
                                </DataTemplate>
                                <Popup AllowsTransparency="True" x:Key="StatusIndicatorPopup" wt:DialogPanel.IsSynchronisationScope="true"  >
                                    <Popup.Resources>
                                        <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxStyle">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="Black" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Popup.Resources>
                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                        <wt:DialogPanel InnerColumnMargin="5">
                                            <wt:DialogPanel.CaptionTemplate>
                                                <DataTemplate>
                                                    <TextBlock Margin="0,3,0,0" Text="{Binding}" />
                                                </DataTemplate>
                                            </wt:DialogPanel.CaptionTemplate>
                                            <TextBlock wt:DialogPanel.Caption="{x:Null}" HorizontalAlignment="Right" Margin="0,-2,2,4"><Hyperlink Command="{Binding RemoveCommand}">Remove</Hyperlink> this data object</TextBlock>
                                            <ComboBox wt:DialogPanel.Caption="Status is indicated:" SelectedItem="{Binding StatusWordCoding}" DisplayMemberPath="Description" ItemsSource="{Binding StatusWordCodingValues}" />
                                            <StackPanel Orientation="Vertical">
                                                <wt:DialogPanel.Caption>
                                                    <CheckBox IsChecked="{Binding IsLifeCycleDefined}" Content="Life Cycle:" IsEnabled="{Binding CanUndefineLifeCycle}" Margin="0,3,0,0" Style="{StaticResource CheckBoxStyle}" />
                                                </wt:DialogPanel.Caption>
                                                <ComboBox IsEditable="true" Text="{Binding LifeCycle,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true}" MinWidth="60" IsEnabled="{Binding IsLifeCycleDefined}" SelectedItem="{Binding LifeCycleInformation}" ItemsSource="{Binding KnownLifeCycleValues}" DisplayMemberPath="Description" />
                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical">
                                                <wt:DialogPanel.Caption>
                                                    <CheckBox IsChecked="{Binding IsStatusWordDefined}" Content="Status Word Indication:" IsEnabled="{Binding CanUndefineStatusWord}" Margin="0,3,0,0" Style="{StaticResource CheckBoxStyle}" />
                                                </wt:DialogPanel.Caption>
                                                <ComboBox IsEditable="true" Text="{Binding StatusWord,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=true}" MinWidth="60" IsEnabled="{Binding IsStatusWordDefined}" SelectedItem="{Binding StatusWordIndication}" ItemsSource="{Binding StatusWordIndicationValues}" DisplayMemberPath="Description" />
                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                            </StackPanel>
                                        </wt:DialogPanel>
                                    </Border>
                                </Popup>
                                <DataTemplate DataType="{x:Type ATRView:DataObjectStatusIndicatorAdapter}">
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel>
                                            <Grid Margin="0,0,5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Caption" />
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Data" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" FontWeight="Bold">
                                                        <TextBlock Text="Status Indicator" /><TextBlock Margin="0,0,5,0" Text=" (0x48)" Visibility="{Binding IncludedInTlv, Converter={StaticResource BooleanToVisibilityConverter}}" /><TextBlock Margin="0,0,5,0" Text=" (last 3 bytes)" Visibility="{Binding IncludedInTlv, Converter={StaticResource BooleanToNonVisibilityConverter}}" />
                                                    </TextBlock>
                                                <TextBlock Grid.Column="1" Text="{Binding Data}" FontWeight="Bold" />
                                            </Grid>
                                            <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right" Controls:AtrEditorHelper.AttachPopupToImage="{StaticResource StatusIndicatorPopup}" Visibility="{Binding DataError, Converter={StaticResource NullToNonVisibilityConverter}}"  />
                                        </DockPanel>
                                        <wt:ContentUnavailableControl ContentAvailable="{Binding DataError, Converter={StaticResource NullToContentAvailableConverter}}" >
                                            <wt:ContentUnavailableControl.DefaultContent>
                                                <DockPanel Margin="10,0,0,0">
                                                    <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                    <TextBlock Text="{Binding DataError}" />
                                                </DockPanel>
                                            </wt:ContentUnavailableControl.DefaultContent>
                                            <wt:DialogPanel InnerColumnMargin="10">
                                                <wt:DialogPanel.CaptionTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="10,0,0,0" Text="{Binding}" />
                                                    </DataTemplate>
                                                </wt:DialogPanel.CaptionTemplate>
                                                <TextBlock wt:DialogPanel.Caption="Life Cycle">
                                                    <TextBlock Text="{Binding LifeCycle, StringFormat='{}{0:X2}', TargetNullValue='Not indicated'}" />
                                                    <TextBlock Text="{Binding LifeCycleInformation, StringFormat='({0})',TargetNullValue=''}" />
                                                </TextBlock>
                                                <TextBlock wt:DialogPanel.Caption="Status Word">
                                                    <TextBlock Text="{Binding StatusWord, StringFormat='{}{0:X4}', TargetNullValue='Not indicated'}" />
                                                    <TextBlock Text="{Binding StatusWordIndication, StringFormat='({0})',TargetNullValue=''}" />
                                                </TextBlock>
                                            </wt:DialogPanel>
                                        </wt:ContentUnavailableControl>
                                    </StackPanel>
                                </DataTemplate>
                            </DataTemplate.Resources>
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <DockPanel Background="Gray">
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/PenLight.png" Height="16" Stretch="Uniform" DockPanel.Dock="Right" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu Placement="Left" HorizontalOffset="16" VerticalOffset="16">
                                                        <MenuItem Header="Change structure of historical characters" ItemsSource="{Binding HistoricalCharacterTypes}">
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="Command" Value="{Binding DataContext.SetHistoricalCharacterTypeCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsPresenter}} }" />
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    <Setter Property="Header" Value="{Binding Description}" />
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                        </MenuItem>
                                                        <Separator />
                                                        <MenuItem Header="Add Country Code (0x41)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.CountryCode}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove Country Code (0x41)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.CountryCode}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add Issuer Identification Number (0x42)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.IssuerIdentificationNumber}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove Issuer Identification Number (0x42)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.IssuerIdentificationNumber}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add Card Service Data (0x43)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.CardServiceData}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove Card Service Data (0x43)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.CardServiceData}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add Initial Access Data (0x44)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.InitialAccessData}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove Initial Access Data (0x44)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.InitialAccessData}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add Card Issuer Data (0x45)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.CardIssuerData}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove Card Issuer Data (0x45)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.CardIssuerData}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add Pre-issuing Data (0x46)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.PreIssuingData}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove Pre-issuing Data (0x46)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.PreIssuingData}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add Card Capabilities (0x47)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.CardCapabilities}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove Card Capabilities (0x47)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.CardCapabilities}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add Status Indicator (0x48 or last 3 bytes)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.StatusIndicator}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove Status Indicator (0x48 or last three bytes)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.StatusIndicator}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add RFU (0x49)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_49}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove RFU (0x49)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_49}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add RFU (0x4A)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4A}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove RFU (0x4A)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4A}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add RFU (0x4B)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4B}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove RFU (0x4B)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4B}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add RFU (0x4C)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4C}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove RFU (0x4C)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4C}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add RFU (0x4D)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4D}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove RFU (0x4D)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4D}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add RFU (0x4E)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4E}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove RFU (0x4E)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.RFU_4E}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Add Application Identifer (0x4F)" Command="{Binding AddDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.ApplicationIdentifer}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                        <MenuItem Header="Remove Application Identifer (0x4F)" Command="{Binding RemoveDataObjectCommand}" CommandParameter="{x:Static ATR:CompactTLVTypes.ApplicationIdentifer}" Visibility="{Binding IsEnabled,RelativeSource={RelativeSource Self}, BindsDirectlyToSource=True, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <TextBlock Text="Historical Characters (Compact TLV)" Foreground="White" HorizontalAlignment="Stretch" Margin="4,2,4,0" />
                                        </DockPanel>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,1" Grid.Row="0" Grid.Column="1">
                                        <TextBlock Text="{Binding HistoricalCharacters}" HorizontalAlignment="Stretch" Margin="4" FontWeight="Bold" />
                                    </Border>
                                    <wt:NotificationBanner Content="{Binding EditingIssue}" NotificationType="Error" Visibility="{Binding EditingIssue, Converter={StaticResource NullToVisibilityConverter}}" HorizontalAlignment="Stretch" Margin="4" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"  />
                                    <ItemsControl ItemsSource="{Binding DataObjects}" HorizontalAlignment="Left" Margin="4" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" />
                                </Grid>
                            </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrDirDataReferenceHistoricalBytesAdapter}">
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <DockPanel Background="Gray">
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/PenLight.png" Height="16" Stretch="Uniform" DockPanel.Dock="Right" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu Placement="Left" HorizontalOffset="16" VerticalOffset="16">
                                                        <MenuItem Header="Change structure of historical characters" ItemsSource="{Binding HistoricalCharacterTypes}">
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="Command" Value="{Binding DataContext.SetHistoricalCharacterTypeCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsPresenter}} }" />
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    <Setter Property="Header" Value="{Binding Description}" />
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <TextBlock Text="Historical Characters (Dir Reference)" Foreground="White" HorizontalAlignment="Stretch" Margin="4,2,4,0" />
                                        </DockPanel>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,1" Grid.Row="0" Grid.Column="1">
                                        <TextBlock Text="{Binding HistoricalCharacters}" HorizontalAlignment="Stretch" Margin="4" FontWeight="Bold" />
                                    </Border>
                                    <DockPanel HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="4">
                                        <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                            <Controls:AtrEditorHelper.AttachPopupToImage >
                                                <Popup AllowsTransparency="True" wt:DialogPanel.IsSynchronisationScope="true" >
                                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                        <wt:DialogPanel InnerColumnMargin="10">
                                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                                                                <wt:DialogPanel.Caption>
                                                                    <TextBlock Text="DIR data reference:" Margin="0,3,0,0" />
                                                                </wt:DialogPanel.Caption>
                                                                <TextBox Text="{Binding DirDataReference, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" MinWidth="30" />
                                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                            </StackPanel>
                                                        </wt:DialogPanel>
                                                    </Border>
                                                </Popup>
                                            </Controls:AtrEditorHelper.AttachPopupToImage>
                                        </Image>
                                        <wt:DialogPanel InnerColumnMargin="10" HorizontalAlignment="Left" >
                                            <TextBlock wt:DialogPanel.Caption="DIR data reference:" Text="{Binding DirDataReference}" />
                                        </wt:DialogPanel>
                                    </DockPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrInvalidHistoricalBytesAdapter}">
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Grid HorizontalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <DockPanel Background="Gray">
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/PenLight.png" Height="16" Stretch="Uniform" DockPanel.Dock="Right" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu Placement="Left" HorizontalOffset="16" VerticalOffset="16">
                                                        <MenuItem Header="Change structure of historical characters" ItemsSource="{Binding HistoricalCharacterTypes}">
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="Command" Value="{Binding DataContext.SetHistoricalCharacterTypeCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsPresenter}} }" />
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    <Setter Property="Header" Value="{Binding Description}" />
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <TextBlock Text="Historical Characters (Invalid Coding)" HorizontalAlignment="Stretch" Margin="4,2,4,0" Foreground="White" />
                                        </DockPanel>
                                            </Border>
                                            <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,1" Grid.Row="0" Grid.Column="1">
                                        <TextBlock Text="{Binding HistoricalCharacters}" HorizontalAlignment="Stretch" Margin="4" FontWeight="Bold" />
                                            </Border>
                                            <wt:DialogPanel InnerColumnMargin="10" HorizontalAlignment="Left" Margin="4" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" >
                                                    <DockPanel wt:DialogPanel.Caption="{x:Null}">
                                                        <Image Source="{StaticResource DrawingErrorSign}" Height="16" DockPanel.Dock="Left" Margin="0,0,3,0" />
                                                        <TextBlock Text="{Binding ParseError}" Style="{StaticResource TextBoxAligned}" />
                                                    </DockPanel>
                                        <TextBlock wt:DialogPanel.Caption="Historical characters (error index marked red)">
                                            <TextBlock Text="{Binding PreErrorData}" />
                                            <TextBlock Text="{Binding ErrorData}" Foreground="Red" />
                                            <TextBlock Text="{Binding PostErrorData}" />
                                        </TextBlock>
                                                </wt:DialogPanel>
                                        </Grid>
                                    </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrProprietaryHistoricalBytesAdapter}">
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <DockPanel Background="Gray">
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/PenLight.png" Height="16" Stretch="Uniform" DockPanel.Dock="Right" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu Placement="Left" HorizontalOffset="16" VerticalOffset="16">
                                                        <MenuItem Header="Change structure of historical characters" ItemsSource="{Binding HistoricalCharacterTypes}">
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="Command" Value="{Binding DataContext.SetHistoricalCharacterTypeCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsPresenter}} }" />
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    <Setter Property="Header" Value="{Binding Description}" />
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <TextBlock Text="Historical Characters (Proprietary)" Foreground="White" HorizontalAlignment="Stretch" Margin="4,2,4,0" />
                                        </DockPanel>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,1" Grid.Row="0" Grid.Column="1">
                                        <TextBlock Text="{Binding HistoricalCharacters}" HorizontalAlignment="Stretch" Margin="4" FontWeight="Bold" />
                                    </Border>
                                    <DockPanel HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="4">
                                        <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                            <Controls:AtrEditorHelper.AttachPopupToImage >
                                                <Popup AllowsTransparency="True" wt:DialogPanel.IsSynchronisationScope="true" >
                                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                        <wt:DialogPanel InnerColumnMargin="10">
                                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                                                                <wt:DialogPanel.Caption>
                                                                    <TextBlock Text="Proprietary structure indicator:" Margin="0,3,0,0" />
                                                                </wt:DialogPanel.Caption>
                                                                <TextBox Text="{Binding CategoryIndicator, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" MinWidth="30" />
                                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                                                                <wt:DialogPanel.Caption>
                                                                    <TextBlock Text="Proprietary data bytes:" Margin="0,3,0,0" />
                                                                </wt:DialogPanel.Caption>
                                                                <TextBox Text="{Binding Bytes, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" MinWidth="100" />
                                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                            </StackPanel>
                                                        </wt:DialogPanel>
                                                    </Border>
                                                </Popup>
                                            </Controls:AtrEditorHelper.AttachPopupToImage>
                                        </Image>
                                        <wt:DialogPanel InnerColumnMargin="10" HorizontalAlignment="Left" >
                                            <TextBlock wt:DialogPanel.Caption="Proprietary category indicator:" Text="{Binding CategoryIndicator}" />
                                            <TextBlock wt:DialogPanel.Caption="Proprietary data bytes:" Text="{Binding Bytes}" />
                                        </wt:DialogPanel>
                                    </DockPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrRfuHistoricalBytesAdapter}">
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <DockPanel Background="Gray">
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/PenLight.png" Height="16" Stretch="Uniform" DockPanel.Dock="Right" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu Placement="Left" HorizontalOffset="16" VerticalOffset="16">
                                                        <MenuItem Header="Change structure of historical characters" ItemsSource="{Binding HistoricalCharacterTypes}">
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="Command" Value="{Binding DataContext.SetHistoricalCharacterTypeCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsPresenter}} }" />
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    <Setter Property="Header" Value="{Binding Description}" />
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <TextBlock Text="Historical Characters (RFU)" HorizontalAlignment="Stretch" Foreground="White" Margin="4,2,4,0" />
                                        </DockPanel>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,1" Grid.Row="0" Grid.Column="1">
                                        <TextBlock Text="{Binding HistoricalCharacters}" HorizontalAlignment="Stretch" Margin="4" FontWeight="Bold" />
                                    </Border>
                                    <DockPanel HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="4">
                                        <Image DockPanel.Dock="Right" Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" HorizontalAlignment="Right">
                                            <Controls:AtrEditorHelper.AttachPopupToImage >
                                                <Popup AllowsTransparency="True" wt:DialogPanel.IsSynchronisationScope="true" >
                                                    <Border Background="White" BorderThickness="1" CornerRadius="3" BorderBrush="Black" Padding="5" Margin="5">
                                                        <wt:DialogPanel InnerColumnMargin="10">
                                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                                                                <wt:DialogPanel.Caption>
                                                                    <TextBlock Text="RFU category indicator:" Margin="0,3,0,0" />
                                                                </wt:DialogPanel.Caption>
                                                                <TextBox Text="{Binding CategoryIndicator, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" MinWidth="30" />
                                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                                                                <wt:DialogPanel.Caption>
                                                                    <TextBlock Text="RFU data bytes:" Margin="0,3,0,0" />
                                                                </wt:DialogPanel.Caption>
                                                                <TextBox Text="{Binding Bytes, ValidatesOnExceptions=true,UpdateSourceTrigger=PropertyChanged}" MinWidth="100" />
                                                                <wt:ValidationResultBanner ValidationResults="{Binding Children[0].(Validation.Errors), RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}}" />
                                                            </StackPanel>
                                                        </wt:DialogPanel>
                                                    </Border>
                                                </Popup>
                                            </Controls:AtrEditorHelper.AttachPopupToImage>
                                        </Image>
                                        <wt:DialogPanel InnerColumnMargin="10" HorizontalAlignment="Left" >
                                            <TextBlock wt:DialogPanel.Caption="RFU category indicator:" Text="{Binding CategoryIndicator}" />
                                            <TextBlock wt:DialogPanel.Caption="RFU data bytes:" Text="{Binding Bytes}" />
                                        </wt:DialogPanel>
                                    </DockPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type ATRView:AtrNoHistoricalBytesAdapter}">
                            <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="caption" Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                        <DockPanel Background="Gray">
                                            <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/PenLight.png" Height="16" Stretch="Uniform" DockPanel.Dock="Right" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                                <Image.ContextMenu>
                                                    <ContextMenu Placement="Left" HorizontalOffset="16" VerticalOffset="16">
                                                        <MenuItem Header="Change structure of historical characters" ItemsSource="{Binding HistoricalCharacterTypes}">
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="Command" Value="{Binding DataContext.SetHistoricalCharacterTypeCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsPresenter}} }" />
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    <Setter Property="Header" Value="{Binding Description}" />
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </Image.ContextMenu>
                                            </Image>
                                            <TextBlock Text="No Historical Characters" HorizontalAlignment="Stretch" Foreground="White" Margin="4,2,4,0" />
                                        </DockPanel>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" BorderBrush="Gray" BorderThickness="0,0,0,1" Grid.Row="0" Grid.Column="1">
                                        <TextBlock HorizontalAlignment="Stretch" Margin="4" FontWeight="Bold" />
                                    </Border>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <wt:ContentUnavailableControl ContentAvailable="{Binding Converter={StaticResource ContentAvailabilityConverter}}" DataContext="{Binding AtrModel, RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="True" >
                        <ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <DockPanel Grid.Row="0" HorizontalAlignment="Stretch">
                                    <TextBlock Text="ATR: " Margin="3" DockPanel.Dock="Left" />
                                    <wt:ValidationResultBanner DockPanel.Dock="Bottom" ValidationResults="{Binding (Validation.Errors), ElementName=AtrValue}" />
                                    <TextBox Name="AtrValue" Background="Transparent" Text="{wt:ValidatingBinding AtrValue, UpdateSourceTrigger=PropertyChanged}" />
                                </DockPanel>
                                <Grid Grid.Row="1" DataContext="{Binding TokenizedAtr}" d:DataContext="{d:DesignInstance Type={x:Type ATRView:TokenizedAtrAdapter}, IsDesignTimeCreatable=False}" HorizontalAlignment="Stretch" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Grid.Column="0" Content="{Binding Preamble }" />
                                    <ItemsControl Grid.Column="1" ItemsSource="{Binding InterfaceBytesGroups }" ItemsPanel="{StaticResource HorizontalStackPanel}" />
                                    <ContentControl Grid.Column="2" Content="{Binding HistoricalCharacters }" />
                                    <ContentControl Grid.Column="3" Content="{Binding Checksum }" />
                                    <ContentControl Grid.Column="4" Content="{Binding ExtraBytes }" />
                                </Grid>
                                <Grid Grid.Row="2" VerticalAlignment="Stretch" DataContext="{Binding InterpretedAtr}" d:DataContext="{d:DesignInstance Type={x:Type ATRView:InterpretedAtrAdapter}, IsDesignTimeCreatable=False}" Grid.IsSharedSizeScope="True" wt:DialogPanel.IsSynchronisationScope="True" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0">
                                    <TextBlock Text="Interpreted:" Style="{StaticResource TextBoxAligned}" />
                                        <Image Source="pack://application:,,,/whiletrue.smartcard;component/Themes/Resources/Pen.png" Height="16" Stretch="Uniform" Controls:AtrEditorHelper.AttachContextMenuToImage="True" >
                                            <Image.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Indicate another protocol" ItemsSource="{Binding PossibleTypesToIndicateAdditionally}" Visibility="{Binding PossibleTypesToIndicateAdditionally.Count,Converter={StaticResource ZeroToVisibilityConverter}}">
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="Command" Value="{Binding DataContext.IndicateProtocolCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsPresenter}} }" />
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                    <Setter Property="Header" Value="{Binding Description}" />
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                    </MenuItem>
                                                </ContextMenu>
                                            </Image.ContextMenu>
                                        </Image>
                                     </TextBlock>
                                    <ContentControl Grid.Row="1" Content="{Binding GlobalInterfaceBytes }" />
                                    <ItemsControl Grid.Row="2" ItemsSource="{Binding ProtocolParameters }" />
                                    <ContentControl Grid.Row="3" Content="{Binding HistoricalCharacters }" VerticalAlignment="Stretch" />
                                </Grid>
                            </Grid>
                        </ScrollViewer>
                    </wt:ContentUnavailableControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>

