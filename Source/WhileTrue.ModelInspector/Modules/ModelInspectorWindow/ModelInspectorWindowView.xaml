<wt:Window x:Class="WhileTrue.Modules.ModelInspectorWindow.ModelInspectorWindowView"
        x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:ModelInspectorWindow="clr-namespace:WhileTrue.Modules.ModelInspectorWindow"
                xmlns:Model="clr-namespace:WhileTrue.Modules.ModelInspectorWindow.Model"
    xmlns:wt="http://schemas.whiletrue.eu/xaml" 
        mc:Ignorable="d" d:DataContext="{d:DesignInstance Type={x:Type ModelInspectorWindow:DesignData},IsDesignTimeCreatable=True}"
        wt:PersistentProperty.ID="ModelInspector"
        Top="{wt:PersistentProperty Top,NaN}"
        Left="{wt:PersistentProperty Left,NaN}"
        Height="{wt:PersistentProperty Height,600}"
        Width="{wt:PersistentProperty Width,300}"
        WindowState="{wt:PersistentProperty WindowState,{x:Static WindowState.Normal}}" 
        d:DesignHeight="249" d:DesignWidth="502" 
        wt:DragDrop.ActivateHelper=""
        Icon="ModelInspector.ico"
        Title="Model Inspector"
        CloseBehaviour="Hide"
        GlassMargin="Sheet"
           
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/WhileTrue.Core;component/Resources/Drawings.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        <wt:CrossThreadCollectionWrapper x:Key="CrossThreadCollectionWrapper"/>
        <wt:CrossThreadCommandWrapper x:Key="CrossThreadCommandWrapper"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Background">
            <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" Offset="0"/>
            <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" Offset="1"/>
        </LinearGradientBrush>
            <Style TargetType="{x:Type Button}" x:Key="ToolButtonStyle">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Button.BorderThickness" Value="0"/>
                        <Setter Property="Button.Background" Value="Transparent"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Button.Opacity" Value="0.3"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <DataTemplate DataType="{x:Type Model:ModelInfoAdapter}">
            <wt:TablePanelRoot>
                <Border BorderThickness="1" BorderBrush="Black">
                        <Expander VerticalAlignment="Top" ExpandDirection="Right" IsExpanded="True" Background="{StaticResource Background}" Name="Expander" wt:DragDrop.Source="{Binding}">
                            <Expander.Header>
                                <StackPanel TextElement.FontWeight="Bold" VerticalAlignment="Stretch" Orientation="Horizontal">
                                    <StackPanel.LayoutTransform>
                                        <RotateTransform Angle="270"/>
                                    </StackPanel.LayoutTransform>
                                    <TextBox Text="{Binding Name}" BorderThickness="0" Background="Transparent"/>
                                    <Label Content="{Binding TypeName}" ContentStringFormat="({0})" Padding="0,1,0,0" />
                                    <Button Margin="2,0,2,0" Command="{Binding CloseModelCommand, Converter={StaticResource CrossThreadCommandWrapper}}" Style="{DynamicResource ToolButtonStyle}">
                                        <Image Source="delete.png" Height="12" Margin="2,0,2,0"/>
                                    </Button>
                                </StackPanel>
                            </Expander.Header>
                            <DockPanel><!-- Height="{Binding Path=ActualHeight, ElementName=Expander}"-->
                                <wt:TablePanelRow Height="22" DockPanel.Dock="Top">
                                    <TextBlock VerticalAlignment="Center" wt:TablePanelRow.Column="0" Text="Property" FontWeight="Bold" Margin="22,0,2,0"/>
                                    <TextBlock VerticalAlignment="Center" wt:TablePanelRow.Column="1" Text="Value" FontWeight="Bold" Margin="2,0,2,0"/>
                                    <TextBlock VerticalAlignment="Center" wt:TablePanelRow.Column="2" Text="Type" FontWeight="Bold" Margin="2,0,2,0"/>
                                </wt:TablePanelRow>
                                    <TreeView ItemsSource="{Binding Root.Children, Converter={StaticResource CrossThreadCollectionWrapper}}" BorderThickness="1,1,0,0" BorderBrush="Gray" Background="White">
                                        <TreeView.ItemContainerStyle>
                                            <Style TargetType="{x:Type TreeViewItem}">
                                                <Setter Property="wt:DragDrop.Source" Value="{Binding}"/>
                                            </Style>
                                        </TreeView.ItemContainerStyle>
                                    </TreeView>
                            </DockPanel>
                        </Expander>
                    </Border>
            </wt:TablePanelRoot>
        </DataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type Model:ModelNodeBaseAdapter}" 
                                  ItemsSource="{Binding Children, Converter={StaticResource CrossThreadCollectionWrapper}}">
            <wt:TablePanelRow wt:PropertyChangedEvent.Attach="{Binding}">
                <TextBlock wt:TablePanelRow.Column="0" Text="{Binding Name}" Margin="2,0,2,0"/>
                <TextBlock wt:TablePanelRow.Column="1" Text="{Binding Value}" Margin="2,0,2,0" Name="Value">
                    <TextBlock.Background>
                        <!-- Set Background in order to be able to animate its color -->
                        <SolidColorBrush Color="Transparent"/>
                    </TextBlock.Background>
                </TextBlock>
                <TextBlock wt:TablePanelRow.Column="2" Text="{Binding Typename}" Margin="2,0,2,0"/>
                    <Image Margin="2,0,2,0" wt:TablePanelRow.Column="3"  Visibility="{Binding SupportsPropertyChanged,Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Image.Resources>
                                <LinearGradientBrush x:Key="Brush" StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="WhiteSmoke" Offset="0"/>
                                            <GradientStop Color="WhiteSmoke" Offset="1"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                                <Pen x:Key="Pen" Thickness=".5" LineJoin="Round">
                                    <Pen.Brush>
                                        <SolidColorBrush Color="Silver"/>
                                    </Pen.Brush>
                                </Pen>
                                <Pen x:Key="BackgroundPen" Thickness="1">
                                    <Pen.Brush>
                                        <RadialGradientBrush GradientOrigin="0.25,0.25" Center="0.5,0.5" RadiusX="0.75" RadiusY="0.75">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="White" Offset="0"/>
                                                    <GradientStop Color="Gray" Offset="1"/>
                                                </GradientStopCollection>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Pen.Brush>
                                </Pen>
                                <RadialGradientBrush x:Key="BackgroundBrush" GradientOrigin="0.25,0.25" Center="0.5,0.5" RadiusX="0.75" RadiusY="0.75">
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </GradientStopCollection>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Image.Resources>
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                <DrawingGroup>
                                                <GeometryDrawing x:Name="IconEvent_Background" Geometry="M 0,7.5 A 1,1 180 0 0 15,7.5 A 1,1 180 0 0 0,7.5" Brush="{DynamicResource BackgroundBrush}" Pen="{DynamicResource BackgroundPen}"/>
                                                <GeometryDrawing x:Name="IconEvent_Bolt" Geometry="M 10,0.5 L 15.5,.5 L9,9.5 L7,9 L2.5,15 L1.6,15 L1.5,14.1 L6,3.5 L8,4 Z" Brush="{DynamicResource Brush}" Pen="{DynamicResource Pen}"/>
                                        <GeometryDrawing Geometry="M -0.5,7.5 A 1,1 180 0 0 15.5,7.5 A 1,1 180 0 0 -0.5,7.5">
                                            <GeometryDrawing.Brush>
                                                <RadialGradientBrush GradientOrigin="1,1" Center=".8,1.2" RadiusX=".9" RadiusY=".9">
                                                    <RadialGradientBrush.GradientStops>
                                                        <GradientStopCollection>
                                                            <GradientStop Color="#66FFFFFF" Offset="0.2"/>
                                                            <GradientStop Color="#20333355" Offset=".95"/>
                                                            <GradientStop Color="Transparent" Offset="1"/>
                                                        </GradientStopCollection>
                                                    </RadialGradientBrush.GradientStops>
                                                </RadialGradientBrush>
                                            </GeometryDrawing.Brush>
                                        </GeometryDrawing>
                                </DrawingGroup>
                            </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                    <Image Margin="2,0,2,0" wt:TablePanelRow.Column="4" Visibility="{Binding SupportsValidation,Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Image.ToolTip>
                            <ToolTip DataContext="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=PlacementTarget.DataContext}" Padding="0">
                                <ContentControl Content="{Binding}">
                                <ContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <ControlTemplate.Resources>
                                                <wt:CrossThreadCollectionWrapper x:Key="CrossThreadCollectionWrapper"/>
                                            </ControlTemplate.Resources>
                                            <wt:ContentUnavailableControl Name="Tooltip" ContentAvailable="{x:Static wt:ContentAvailability.Available}">
                                                <wt:ContentUnavailableControl.DefaultContent>
                                                    <Label Content="No validation messages available for this property"/>
                                                </wt:ContentUnavailableControl.DefaultContent>
                                                <Border Name="Border" BorderBrush="Red" Background="LightPink" BorderThickness="1,1,1,1" Padding="2">
                                                <ItemsControl Name="Content" IsTabStop="False" Focusable="False" ItemsSource="{Binding ValidationResults,Converter={StaticResource CrossThreadCollectionWrapper}}">
                                                    <ItemsControl.Resources>
                                                        <wt:ObjectLookupConverter x:Key="SeverityToImageConverter">
                                                            <wt:ObjectLookupItem Key="Info" Value="{StaticResource DrawingInformationSign}"/>
                                                            <wt:ObjectLookupItem Key="Warning" Value="{StaticResource DrawingWarningSign}"/>
                                                            <wt:ObjectLookupItem Key="Error" Value="{StaticResource DrawingErrorSign}"/>
                                                            <wt:ObjectLookupItem Key="ImplicitError" Value="{StaticResource DrawingErrorSign}"/>
                                                        </wt:ObjectLookupConverter>
                                                        <wt:ObjectLookupConverter x:Key="SeverityToBackgroundConverter">
                                                            <wt:ObjectLookupItem Key="Info" Value="LightYellow"/>
                                                            <wt:ObjectLookupItem Key="Warning" Value="LightGoldenrodYellow"/>
                                                            <wt:ObjectLookupItem Key="Error" Value="LightPink"/>
                                                            <wt:ObjectLookupItem Key="ImplicitError" Value="LightPink"/>
                                                        </wt:ObjectLookupConverter>
                                                    </ItemsControl.Resources>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate DataType="{x:Type wt:ValidationMessage}">
                                                            <Border Focusable="False" HorizontalAlignment="Stretch" Background="{Binding Severity,Converter={StaticResource SeverityToBackgroundConverter}}" Margin="1" CornerRadius="2">
                                                                <DockPanel Focusable="False" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                                                                    <Image Focusable="False" VerticalAlignment="Top" Source="{Binding Severity,Converter={StaticResource SeverityToImageConverter}}" DockPanel.Dock="Left" Stretch="Uniform" Height="16" Margin="1,1,1,1"/>
                                                                    <ContentPresenter Focusable="False" Content="{Binding Message}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4,0,4,0"/>
                                                                </DockPanel>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </Border>
                                            </wt:ContentUnavailableControl>
                                            <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding ValidationSeverity}" Value="{x:Static wt:ValidationSeverity.Error}">
                                                <Setter TargetName="Border" Property="Border.BorderBrush" Value="Red"/>
                                                <Setter TargetName="Border" Property="Border.Background" Value="LightPink"/>
                                            </DataTrigger>
                                                <DataTrigger Binding="{Binding ValidationSeverity}" Value="{x:Static wt:ValidationSeverity.ImplicitError}">
                                                <Setter TargetName="Border" Property="Border.BorderBrush" Value="Red"/>
                                                <Setter TargetName="Border" Property="Border.Background" Value="LightPink"/>
                                            </DataTrigger>
                                                <DataTrigger Binding="{Binding ValidationSeverity}" Value="{x:Static wt:ValidationSeverity.Warning}">
                                                <Setter TargetName="Border" Property="Border.BorderBrush" Value="Yellow"/>
                                                <Setter TargetName="Border" Property="Border.Background" Value="LightGoldenrodYellow"/>
                                            </DataTrigger>
                                                <DataTrigger Binding="{Binding ValidationSeverity}" Value="{x:Static wt:ValidationSeverity.Info}">
                                                <Setter TargetName="Border" Property="Border.BorderBrush" Value="Gray"/>
                                                <Setter TargetName="Border" Property="Border.Background" Value="LightYellow"/>
                                            </DataTrigger>
                                                <DataTrigger Binding="{Binding ValidationSeverity}" Value="{x:Static wt:ValidationSeverity.None}">
                                                    <Setter TargetName="Tooltip" Property="ContentAvailable" Value="{x:Static wt:ContentAvailability.Unavailable}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ContentControl.Template>
                                </ContentControl>
                            </ToolTip>
                        </Image.ToolTip>
                            <Image.Resources>
                            <wt:ObjectLookupConverter x:Key="SeverityToBrush1Converter">
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.Error}" Value="#FFFF5555"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.ImplicitError}" Value="#FFFF5555"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.Warning}" Value="LightYellow"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.Info}" Value="White"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.None}" Value="WhiteSmoke"/>
                            </wt:ObjectLookupConverter>
                            <wt:ObjectLookupConverter x:Key="SeverityToBrush2Converter">
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.Error}" Value="#FFD00000"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.ImplicitError}" Value="#FFD00000"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.Warning}" Value="Yellow"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.Info}" Value="Silver"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.None}" Value="WhiteSmoke"/>
                            </wt:ObjectLookupConverter>
                            <wt:ObjectLookupConverter x:Key="SeverityToPenConverter">
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.Error}" Value="DarkRed"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.ImplicitError}" Value="DarkRed"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.Warning}" Value="GoldenRod"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.Info}" Value="Black"/>
                                <wt:ObjectLookupItem Key="{x:Static wt:ValidationSeverity.None}" Value="Silver"/>
                            </wt:ObjectLookupConverter>
                            <LinearGradientBrush x:Key="Brush" StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{Binding ValidationSeverity, Converter={StaticResource SeverityToBrush1Converter}}" Offset="0"/>
                                        <GradientStop Color="{Binding ValidationSeverity, Converter={StaticResource SeverityToBrush2Converter}}" Offset="1"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                                <Pen x:Key="Pen" Thickness=".5">
                                    <Pen.Brush>
                                    <SolidColorBrush Color="{Binding ValidationSeverity, Converter={StaticResource SeverityToPenConverter}}"/>
                                    </Pen.Brush>
                                </Pen>
                                <RadialGradientBrush x:Key="BackgroundBrush" GradientOrigin="0.25,0.25" Center="0.5,0.5" RadiusX="0.75" RadiusY="0.75">
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </GradientStopCollection>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                                <Pen x:Key="BackgroundPen" Thickness="1">
                                    <Pen.Brush>
                                        <RadialGradientBrush GradientOrigin="0.25,0.25" Center="0.5,0.5" RadiusX="0.75" RadiusY="0.75">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="White" Offset="0"/>
                                                    <GradientStop Color="Gray" Offset="1"/>
                                                </GradientStopCollection>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Pen.Brush>
                                </Pen>
                            </Image.Resources>
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing x:Name="IconValidation_Background" Geometry="M 0,7.5 A 1,1 180 0 0 15,7.5 A 1,1 180 0 0 0,7.5" Brush="{DynamicResource BackgroundBrush}" Pen="{DynamicResource BackgroundPen}"/>
                                                <GeometryDrawing x:Name="IconValidation_MarkTop" Pen="{DynamicResource Pen}" Brush="{DynamicResource Brush}">
                                                    <GeometryDrawing.Geometry>
                                                    <PathGeometry Figures="M 7.5 2 q 3,0 3,3 q -1,4 -3,4 q -2,0 -3,-4 q 0,-3 3,-3"/>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>
                                                <GeometryDrawing x:Name="IconValidation_MarkBottom" Pen="{DynamicResource Pen}" Brush="{DynamicResource Brush}">
                                                    <GeometryDrawing.Geometry>
                                                        <PathGeometry Figures="M 7.5 9 a 2,2 180 1 1 0,4 a 2,2 180 1 1 0,-4"/>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>
                                                <GeometryDrawing Geometry="M -0.5,7.5 A 1,1 180 0 0 15.5,7.5 A 1,1 180 0 0 -0.5,7.5">
                                                    <GeometryDrawing.Brush>
                                                        <RadialGradientBrush GradientOrigin="1,1" Center=".8,1.2" RadiusX=".9" RadiusY=".9">
                                                            <RadialGradientBrush.GradientStops>
                                                                <GradientStopCollection>
                                                                    <GradientStop Color="#66FFFFFF" Offset="0.2"/>
                                                                    <GradientStop Color="#20333355" Offset=".95"/>
                                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                                </GradientStopCollection>
                                                            </RadialGradientBrush.GradientStops>
                                                        </RadialGradientBrush>
                                                    </GeometryDrawing.Brush>
                                                </GeometryDrawing>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    <wt:TablePanelRow.Triggers>
                    <EventTrigger RoutedEvent="{wt:PropertyChangedEvent Value}">
                        <BeginStoryboard>
                            <Storyboard>
                                <!--ColorAnimation Storyboard.TargetName="Value" Storyboard.TargetProperty="Background.Color" From="Red" To="Transparent" Duration="0:0:2" AccelerationRatio="0.5" /-->
                                <ColorAnimation Storyboard.TargetName="IconEvent_Background" Storyboard.TargetProperty="Brush.GradientStops[0].Color" From="Orange" Duration="0:0:2" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconEvent_Background" Storyboard.TargetProperty="Brush.GradientStops[1].Color" From="Red" Duration="0:0:2" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconEvent_Background" Storyboard.TargetProperty="Pen.Brush.GradientStops[0].Color" From="Red" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconEvent_Background" Storyboard.TargetProperty="Pen.Brush.GradientStops[1].Color" From="Red" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconEvent_Bolt" Storyboard.TargetProperty="Brush.GradientStops[0].Color" From="Yellow" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconEvent_Bolt" Storyboard.TargetProperty="Brush.GradientStops[1].Color" From="Orange" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconEvent_Bolt" Storyboard.TargetProperty="Pen.Brush.Color" From="Red" Duration="0:0:5" AccelerationRatio="0.7" />
                                </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>          
                    <EventTrigger RoutedEvent="{wt:PropertyChangedEvent ValidationSeverity}">
                        <BeginStoryboard>
                            <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="IconValidation_Background" Storyboard.TargetProperty="Brush.GradientStops[0].Color" From="Orange" Duration="0:0:2" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconValidation_Background" Storyboard.TargetProperty="Brush.GradientStops[1].Color" From="Red" Duration="0:0:2" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconValidation_Background" Storyboard.TargetProperty="Pen.Brush.GradientStops[0].Color" From="Red" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconValidation_Background" Storyboard.TargetProperty="Pen.Brush.GradientStops[1].Color" From="Red" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconValidation_MarkTop" Storyboard.TargetProperty="Brush.GradientStops[0].Color" From="Yellow" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconValidation_MarkTop" Storyboard.TargetProperty="Brush.GradientStops[1].Color" From="Orange" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconValidation_MarkTop" Storyboard.TargetProperty="Pen.Brush.Color" From="Red" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconValidation_MarkBottom" Storyboard.TargetProperty="Brush.GradientStops[0].Color" From="Yellow" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconValidation_MarkBottom" Storyboard.TargetProperty="Brush.GradientStops[1].Color" From="Orange" Duration="0:0:5" AccelerationRatio="0.7" />
                                    <ColorAnimation Storyboard.TargetName="IconValidation_MarkBottom" Storyboard.TargetProperty="Pen.Brush.Color" From="Red" Duration="0:0:5" AccelerationRatio="0.7" />
                                </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </wt:TablePanelRow.Triggers>
            </wt:TablePanelRow>
        </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type Model:ModelGroupAdapter}">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" IsDeferredScrollingEnabled="True">
                    <ItemsControl ItemsSource="{Binding Models, Converter={StaticResource CrossThreadCollectionWrapper}}" wt:DragDrop.Target="{Binding DragDropHandler}" VerticalAlignment="Top">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <TabControl ItemsSource="{Binding Groups, Converter={StaticResource CrossThreadCollectionWrapper}}" wt:DragDrop.Target="{Binding DragDropHandler}">
        <TabControl.ItemContainerStyle>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Header" Value="{Binding}"/>
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                            <TextBox Text="{Binding Name}" IsHitTestVisible="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem,Mode=FindAncestor}}" BorderThickness="0" Background="Transparent"/>
                                <Button Margin="2,0,2,0" Command="{Binding CloseGroupCommand, Converter={StaticResource CrossThreadCommandWrapper}}" Style="{DynamicResource ToolButtonStyle}">
                                    <Image Source="delete.png" Height="12"/>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="wt:DragDrop.Source" Value="{Binding}"/>
            </Style>
        </TabControl.ItemContainerStyle>
        <TabControl.Template>
            <ControlTemplate TargetType="{x:Type TabControl}">
                <Grid KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true"
                          ClipToBounds="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="ColumnDefinition0"/>
                        <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto"/>
                        <RowDefinition x:Name="RowDefinition1"
                                           Height="*"/>
                    </Grid.RowDefinitions>
                    <DockPanel Margin="2,2,2,0" Grid.Column="0" Grid.Row="0" DataContext="{Binding DataContext,RelativeSource={RelativeSource TemplatedParent}}">
                        <Border DockPanel.Dock="Right" VerticalAlignment="Top" BorderThickness="1" BorderBrush="Silver" CornerRadius="3" Padding="1">
                            <Border.Background>
                                <SolidColorBrush Color="White" Opacity="0.5"/>
                            </Border.Background>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                <wt:CrossThreadCommandWrapper x:Key="CrossThreadCommandWrapper"/>
                            </StackPanel.Resources>
                                <Button Content="1:1" Height="21" Width="21" Background="Transparent" BorderBrush="Silver" Padding="0" Command="{Binding ZoomModel.ResetZoomCommand, Converter={StaticResource CrossThreadCommandWrapper}}"/>
                                <Slider Width="100" Minimum="-3" Maximum="3" Value="{Binding ZoomModel.ZoomFactor}" />
                        </StackPanel>
                        </Border>
                        <!--Border DockPanel.Dock="Left" VerticalAlignment="Top">
                            <Border.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding ZoomModel.Zoom}" ScaleY="{Binding ZoomModel.Zoom}"/>
                            </Border.LayoutTransform>
                            <Menu Margin="0,0,5,0" BorderBrush="Gray" BorderThickness="1">
                                <MenuItem Header="File">
                                    <MenuItem Header="Minimize to tray"/>
                                </MenuItem>
                            </Menu>
                        </Border-->
                        <wt:NonClientAreaRegion Panel.ZIndex ="1" NonClientAreaType="HTCAPTION">
                            <TabPanel x:Name="HeaderPanel"
                                  KeyboardNavigation.TabIndex="1"
                                  VerticalAlignment="Bottom"
                                  IsItemsHost="true">
                                <TabPanel.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding ZoomModel.Zoom}" ScaleY="{Binding ZoomModel.Zoom}"/>
                                </TabPanel.LayoutTransform>
                            </TabPanel>
                        </wt:NonClientAreaRegion>
                    </DockPanel>
                    <Border x:Name="ContentPanel"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                Grid.Column="0"
                                Grid.Row="1">
                        <Border.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding ZoomModel.Zoom}" ScaleY="{Binding ZoomModel.Zoom}"/>
                        </Border.LayoutTransform>
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"/>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                        <Setter Property="Grid.Row"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                        <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                        <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                        <Setter Property="Height"
                                    Value="Auto"
                                    TargetName="RowDefinition1"/>
                        <Setter Property="Margin"
                                    Value="2,0,2,2"
                                    TargetName="HeaderPanel"/>
                    </Trigger>
                    <Trigger Property="TabStripPlacement"
                                 Value="Left">
                        <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                        <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                        <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                        <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="ContentPanel"/>
                        <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition0"/>
                        <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition1"/>
                        <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                        <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                        <Setter Property="Margin"
                                    Value="2,2,0,2"
                                    TargetName="HeaderPanel"/>
                    </Trigger>
                    <Trigger Property="TabStripPlacement"
                                 Value="Right">
                        <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                        <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                        <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                        <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                        <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition0"/>
                        <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition1"/>
                        <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                        <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                        <Setter Property="Margin"
                                    Value="0,2,2,2"
                                    TargetName="HeaderPanel"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" 
                                 Value="false">
                        <Setter Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </TabControl.Template>
    </TabControl>
</wt:Window>
